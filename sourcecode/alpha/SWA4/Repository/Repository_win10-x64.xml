<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Repository</name>
    </assembly>
    <members>
        <member name="T:Repository.ADUser">
            <remarks />
        </member>
        <member name="M:Repository.ADUser.#ctor">
            <summary>Initializes an empty instance of ADUser</summary>
        </member>
        <member name="M:Repository.ADUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ADUser</summary><param name="uId">UserId</param><param name="title" /><param name="fName">FullName</param><param name="dispName">DisplayName</param><param name="empId">employmentId</param><param name="empNo">EmployeeNumber</param>
            <param name="pgId">PrimaryGroupId</param><param name="memOf">MemberOf</param><param name="init">Initials</param><param name="gName">GivenName</param><param name="sName">SurName</param><param name="mail" /><param name="phone">Telephone</param><param name="IpPhone">IpPhone</param>
            <param name="mPhone">MobilePhone</param><param name="oPhone">OtherTelephone</param><param name="office" /><param name="comp">Company</param><param name="dept">Department</param><param name="distName">DistinguishedName</param><param name="aPath">AdsPath</param>
        </member>
        <member name="M:Repository.ADUser.#ctor(Repository.ADUser)">
            <summary>Initializes an instance of ADUser, that accepts data from an existing ADUser</summary><param name="user" />
        </member>
        <member name="P:Repository.ADUser.UserId">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.Title">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.FullName">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.DisplayName">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.EmployeeId">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.EmployeeNumber">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.PrimaryGroupId">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.MemberOf">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.Initials">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.SurName">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.Mail">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.Telephone">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.IpPhone">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.MobilePhone">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.OtherTelephone">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.Office">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.Company">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.Department">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.DistinguishedName">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.AdsPath">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.XmlHeader">
            <remarks />
        </member>
        <member name="P:Repository.ADUser.XmlString">
            <remarks />
        </member>
        <member name="M:Repository.ADUser.ConvertUserIdToMail(System.String)">
            <returns>Requested mail address</returns>
        </member>
        <member name="M:Repository.ADUser.ToString">
            <returns>This entity as string</returns>
        </member>
        <member name="T:Repository.ApiPair">
            <remarks/>
        </member>
        <member name="M:Repository.ApiPair.#ctor">
            <summary>Initializes an empty instance of ApiPair</summary>
        </member>
        <member name="M:Repository.ApiPair.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of ApiPair</summary><param name="sdApi" /><param name="instId">InstitutionIdentifier</param>
        </member>
        <member name="M:Repository.ApiPair.#ctor(Repository.ApiPair)">
            <summary>Initializes a new instance of ApiPair accepting data from existing ApiPair</summary><param name="apiPair" />
        </member>
        <member name="P:Repository.ApiPair.SdApi">
            <remarks />
        </member>
        <member name="P:Repository.ApiPair.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="T:Repository.Config">
            <remarks />
            <remarks />
        </member>
        <member name="F:Repository.Config.Error400Data">
            <remarks />
        </member>
        <member name="F:Repository.Config.Error401Data">
            <remarks />
        </member>
        <member name="F:Repository.Config.Error415Data">
            <remarks />
        </member>
        <member name="F:Repository.Config.Error501Data">
            <remarks />
        </member>
        <member name="P:Repository.Config.AdministrationIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ConnectionString">
            <remarks />
        </member>
        <member name="P:Repository.Config.ContactInformationIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.FutureDate">
            <remarks />
        </member>
        <member name="P:Repository.Config.OldDate">
            <remarks />
        </member>
        <member name="P:Repository.Config.OneMonthAgo">
            <remarks />
        </member>
        <member name="P:Repository.Config.Today">
            <remarks />
        </member>
        <member name="P:Repository.Config.Tomorrow">
            <remarks />
        </member>
        <member name="P:Repository.Config.TwelweMonthsAgo">
            <remarks />
        </member>
        <member name="P:Repository.Config.Yesterday">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentLevelIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentNameIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentUUIDIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentDepartmentIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentStatusIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.FutureInformationIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.InstitutionIdentifierList">
            <remarks/>
        </member>
        <member name="P:Repository.Config.InstitutionUUIDIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.JobPositionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.PersonCivilRegistrationIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.PostalAddressIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ProductionUnitIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ProfessionIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.RegionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.RegionUUIDIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryAgreementIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryCodeGroupIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.StatusActiveIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.StatusPassiveIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.Submit">
            <remarks />
        </member>
        <member name="P:Repository.Config.UserName">
            <remarks />
        </member>
        <member name="P:Repository.Config.UUIDIndicator">
            <remarks />
        </member>
        <member name="F:Repository.Config.ValidSdApisDependencyDataClone">
            <remarks />
        </member>
        <member name="F:Repository.Config.ValidSdApisDependencyDataUpdate">
            <remarks />
        </member>
        <member name="F:Repository.Config.ValidSdApisPersonDataClone">
            <remarks />
        </member>
        <member name="F:Repository.Config.ValidSdApisPersonDataUpdate">
            <remarks />
        </member>
        <member name="P:Repository.Config.WorkingTimeIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.WorkingDirectoryPath">
            <remarks />
        </member>
        <member name="F:Repository.Config.ExitCode">
            <remarks />
        </member>
        <member name="P:Repository.Config.FromDate">
            <remarks />
        </member>
        <member name="P:Repository.Config.ToDate">
            <remarks />
        </member>
        <member name="P:Repository.Config.ActivationDate">
            <remarks />
        </member>
        <member name="P:Repository.Config.ActivationTime">
            <remarks />
        </member>
        <member name="P:Repository.Config.DeactivationDate">
            <remarks />
        </member>
        <member name="P:Repository.Config.DeactivationTime">
            <remarks />
        </member>
        <member name="P:Repository.Config.EffectiveDate">
            <remarks />
        </member>
        <member name="F:Repository.Config.ParameterDictionary">
            <remarks />
        </member>
        <member name="F:Repository.Config.MediaTypes">
            <remarks />
        </member>
        <member name="P:Repository.Config.SdApiList">
            <remarks />
        </member>
        <member name="P:Repository.Config.UserList">
            <remarks />
        </member>
        <member name="P:Repository.Config.WsList">
            <remarks />
        </member>
        <member name="P:Repository.Config.XmEmploymentList">
            <remarks />
        </member>
        <member name="P:Repository.Config.DataSetPath">
            <remarks />
        </member>
        <member name="P:Repository.Config.ErrorPath">
            <remarks />
        </member>
        <member name="P:Repository.Config.FilePath">
            <remarks />
        </member>
        <member name="P:Repository.Config.FileTimeStamp">
            <remarks />
        </member>
        <member name="P:Repository.Config.LogFilePath">
            <remarks />
        </member>
        <member name="P:Repository.Config.LogTimeStamp">
            <remarks />
        </member>
        <member name="P:Repository.Config.XmlFilePath">
            <remarks />
        </member>
        <member name="P:Repository.Config.All">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllDepartmentsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllDatabaseUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllEmploymentsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllEmploymentsChangedUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllEmploymentsChangedAtDateUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllInstitutionsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllOrganizationsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllOrganizationStructuresUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllPersonsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllPersonsChangedAtDateUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllProfessionsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllDataCleaned">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllDataDeserialized">
            <remarks />
        </member>
        <member name="P:Repository.Config.AllDataRetrieved">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiContactInformationIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiDepartmentIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiDepartmentLevelReferenceIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiDepartmentReferenceIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiEmploymentStatusIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiPostalAddressIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiProfessionIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiSalaryAgreementIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiSalaryCodegroupIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiWorkingTimeIndicator">
            <remarks />
        </member>
        <member name="P:Repository.Config.Authorized">
            <remarks />
        </member>
        <member name="P:Repository.Config.CioInfoUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.ContactInformationDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.ContentInterpreted">
            <remarks />
        </member>
        <member name="P:Repository.Config.ContentProcessed">
            <remarks />
        </member>
        <member name="P:Repository.Config.DataBaseUpdated">
            <remarks/>
        </member>
        <member name="P:Repository.Config.DataCleaned">
            <remarks/>
        </member>
        <member name="P:Repository.Config.DataDeserialized">
            <remarks />
        </member>
        <member name="P:Repository.Config.DataRetrieved">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentLevelReferenceDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentReferenceDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.DownloadPathDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentStatusDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.InfosUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.InstitutionDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.MacAddressSet">
            <remarks/>
        </member>
        <member name="P:Repository.Config.NewDataRetrieved">
            <remarks/>
        </member>
        <member name="P:Repository.Config.OldDataretrieved">
            <remarks/>
        </member>
        <member name="P:Repository.Config.OrganizationDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.OrganizationStructureDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.PersonDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.PostalAddressDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.ProfessionDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.RequestContainsData">
            <remarks />
        </member>
        <member name="P:Repository.Config.ResponseContainsData">
            <remarks />
        </member>
        <member name="P:Repository.Config.ResponseSaved">
            <remarks />
        </member>
        <member name="P:Repository.Config.RunServer">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryAgreementDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryCodeGroupDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.SuccessfulRunDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.UnsupportedMedia">
            <remarks />
        </member>
        <member name="P:Repository.Config.UpdateError">
            <remarks/>
        </member>
        <member name="P:Repository.Config.UseCachedDownloadList">
            <remarks/>
        </member>
        <member name="P:Repository.Config.Uuid">
            <remarks />
        </member>
        <member name="P:Repository.Config.ValidDates">
            <remarks />
        </member>
        <member name="P:Repository.Config.ValidFilePath">
            <remarks/>
        </member>
        <member name="P:Repository.Config.ValidQuery">
            <remarks />
        </member>
        <member name="P:Repository.Config.ValidRequest">
            <remarks />
        </member>
        <member name="P:Repository.Config.ValidResponse">
            <remarks />
        </member>
        <member name="P:Repository.Config.ValidSdApi">
            <remarks />
        </member>
        <member name="P:Repository.Config.WorkingTimeDoubletsRemoved">
            <remarks />
        </member>
        <member name="P:Repository.Config.XmlDataDeserialized">
            <remarks/>
        </member>
        <member name="P:Repository.Config.XmlDataRetrieved">
            <remarks/>
        </member>
        <member name="P:Repository.Config.XmListSaved">
            <remarks />
        </member>
        <member name="P:Repository.Config.XmRetrieved">
            <remarks />
        </member>
        <member name="P:Repository.Config.BasicDepartmentLevelReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.BasicDepartmentReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.ContactInformationsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentLevelReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.DownloadPathsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentProfessionsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentStatusesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.InstitutionsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level1DepartmentLevelReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level1DepartmentReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level2DepartmentLevelReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level2DepartmentReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level3DepartmentLevelReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level3DepartmentReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level4DepartmentLevelReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level4DepartmentReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level5DepartmentLevelReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level5DepartmentReferencesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.OrganizationsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.OrganizationStructuresIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.PersonsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.PostalAddressesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.ProfessionsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryAgreementsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryCodeGroupsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.SdAdRelationsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.SuccessfulRunsIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.WorkingTimesIgnored">
            <remarks />
        </member>
        <member name="P:Repository.Config.BasicDepartmentLevelReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.BasicDepartmentReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.ContactInformationsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentLevelReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.DownloadPathsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentProfessionsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentStatusesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.InstitutionsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level1DepartmentLevelReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level1DepartmentReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level2DepartmentLevelReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level2DepartmentReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level3DepartmentLevelReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level3DepartmentReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level4DepartmentLevelReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level4DepartmentReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level5DepartmentLevelReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level5DepartmentReferencesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.OrganizationsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.OrganizationStructuresNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.PersonsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.PostalAddressesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.ProfessionsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryAgreementsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryCodeGroupsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.SdAdRelationsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.SuccessfulRunsNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.WorkingTimesNotUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.BasicDepartmentLevelReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.BasicDepartmentReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.ContactInformationsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentLevelReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.DepartmentsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.DownloadPathsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentProfessionsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.EmploymentStatusesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.InstitutionsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level1DepartmentLevelReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level1DepartmentReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level2DepartmentLevelReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level2DepartmentReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level3DepartmentLevelReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level3DepartmentReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level4DepartmentLevelReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level4DepartmentReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level5DepartmentLevelReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.Level5DepartmentReferencesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.OrganizationsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.OrganizationStructuresUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.PersonsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.PersonContactInformationsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.PostalAddressesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.ProfessionsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryAgreementsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.SalaryCodeGroupsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.SdAdRelationsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.SuccessfulRunsUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.WorkingTimesUpdated">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetDepartmentAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetEmploymentAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetEmploymentChangedAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetEmploymentChangedAtDateAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetInstitutionAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetOrganizationAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetPersonAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetPersonChangedAtDateAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.GetProfessionAction">
            <remarks />
        </member>
        <member name="P:Repository.Config.Active">
            <remarks />
        </member>
        <member name="P:Repository.Config.Api">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiDepartmentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiEmploymentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiInstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiJobPositionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiOrganizationIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.ApiOrganizationStructureIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.AppName">
            <remarks />
        </member>
        <member name="P:Repository.Config.FileName">
            <remarks />
        </member>
        <member name="P:Repository.Config.Format">
            <remarks />
        </member>
        <member name="P:Repository.Config.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Config.MacAddress">
            <remarks />
        </member>
        <member name="P:Repository.Config.PassWord">
            <remarks />
        </member>
        <member name="P:Repository.Config.PageData">
            <remarks />
        </member>
        <member name="P:Repository.Config.RequestString">
            <remarks />
        </member>
        <member name="P:Repository.Config.ResponseString">
            <remarks />
        </member>
        <member name="P:Repository.Config.Roles">
            <remarks />
        </member>
        <member name="P:Repository.Config.RunMode">
            <remarks />
        </member>
        <member name="P:Repository.Config.Silo">
            <remarks />
        </member>
        <member name="P:Repository.Config.SoapResult">
            <remarks />
        </member>
        <member name="P:Repository.Config.User">
            <remarks />
        </member>
        <member name="P:Repository.Config.WebServiceQueryString">
            <remarks />
        </member>
        <member name="P:Repository.Config.WebServiceActionUri">
            <remarks />
        </member>
        <member name="M:Repository.Config.#ctor">
            <summary>Initializes an empty instance of Config</summary>
        </member>
        <member name="M:Repository.Config.#ctor(Repository.Config)">
            <summary>Initializes an instance of Config, that accepts data from an existing Config</summary><param name="config" />
        </member>
        <member name="M:Repository.Config.CheckInstitutionIdentifier(System.String)">
            <returns>Result as bool</returns><param name="s">'HB', 'HI', or'HW'</param>
        </member>
        <member name="M:Repository.Config.ResetErrorFlags">
            <summary>Resets DataRetrieved</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Config.SdApiIsValid(System.String)">
            <remarks/>
        </member>
        <member name="M:Repository.Config.SetActionUri(System.String)">
            <summary>Sets WebServiceActionUri</summary><param name="sdApi" />
        </member>
        <member name="M:Repository.Config.SetDatesClone(System.String)">
            <summary>Set FromDate and ToDate for full cloning</summary><param name="sdApi" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Config.SetDatesDaily(System.String)">
            <summary>Set FromDate and ToDate for daily updates</summary><param name="sdApi" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Config.SetDatesOccasionally(System.String)">
            <summary>Set from and to dates for the occasional updates</summary><param name="sdApi" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Config.SetErrorFlags">
            <summary>Sets UpdateError, DataRetrieved, and AllDataRetrieved</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Config.AddHyphensToStringDate(System.String)">
            <returns>date with hyphens as string</returns><param name="date" />
        </member>
        <member name="M:Repository.Config.CheckSdApi(System.String)">
            <returns>Result as bool</returns><param name="sdApi" />
        </member>
        <member name="M:Repository.Config.CheckTarget(System.String)">
            <returns>Result as bool</returns><param name="target">'log' or 'console'</param>
        </member>
        <member name="M:Repository.Config.CheckDate(System.DateOnly,System.Boolean)">
            <returns>Validated date as string</returns><param name="date" /><param name="deactDate" />
        </member>
        <member name="M:Repository.Config.FillFieldProps(Repository.Config)">
            <summary>Adds data from <paramref name="config"/> to this Config</summary><param name="config" />
        </member>
        <member name="M:Repository.Config.RetrieveAppName">
            <returns>AppName as string</returns>
        </member>
        <member name="M:Repository.Config.RetrieveMacAddress">
            <summary>Retrieves MacAddress of this environment</summary>
        </member>
        <member name="M:Repository.Config.SetActivationDate(System.String)">
            <summary>Set ActivationDate</summary>
        </member>
        <member name="M:Repository.Config.SetDeactivationDate(System.String)">
            <summary>Set DeactivationDate</summary>
        </member>
        <member name="M:Repository.Config.SetEffectiveDate(System.DateOnly)">
            <summary>Set EffectiveDate</summary><exception cref="T:Repository.ArgumentInvalidException" />
        </member>
        <member name="M:Repository.Config.SetInstitutionIdentifier(System.String)">
            <summary>Set InstitutionIdentifier</summary><exception cref="T:Repository.ArgumentInvalidException" />
        </member>
        <member name="M:Repository.Config.SetQueryDates(System.DateOnly,System.DateOnly)">
            <summary>Sets ActivationDate and DeactivationDate</summary><param name="fromDate" /><param name="toDate" />
        </member>
        <member name="M:Repository.Config.SetQueryInstitutionIdentifier(System.String)">
            <summary>Sets InstitutionIdentifier for SOAP</summary><param name="instId">InstitutionIdentifier</param>
        </member>
        <member name="T:Repository.ContactInformation">
            <remarks/>
        </member>
        <member name="M:Repository.ContactInformation.#ctor">
            <summary>Initializes an empty instance of ContactInformation</summary>
        </member>
        <member name="M:Repository.ContactInformation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ContactInformation</summary><param name="parentId" /><param name="institutionId" /><param name="phone1" /><param name="phone2" />
            <param name="email1" /><param name="email2" />
        </member>
        <member name="M:Repository.ContactInformation.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ContactInformation from database</summary><param name="id" /><param name="parentId" /><param name="institutionId" /><param name="phone1" />
            <param name="phone2" /><param name="email1" /><param name="email2" />
        </member>
        <member name="M:Repository.ContactInformation.#ctor(System.String[])">
            <summary>Initializes a new instance of ContactInformation from database</summary><param name="array" />
        </member>
        <member name="M:Repository.ContactInformation.#ctor(Repository.ContactInformation)">
            <summary>Initializes a new instance of ContactInformation, that accepts data from existing ContactInformation</summary><param name="info" />
        </member>
        <member name="P:Repository.ContactInformation.Id">
            <remarks/>
        </member>
        <member name="P:Repository.ContactInformation.ParentIdentifier">
            <summary>Aka. PersonCivilRegistrationIdentifier or DepartmentIdentifier</summary>
        </member>
        <member name="P:Repository.ContactInformation.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.ContactInformation.TelephoneNumberIdentifier1">
            <remarks/>
        </member>
        <member name="P:Repository.ContactInformation.TelephoneNumberIdentifier2">
            <remarks/>
        </member>
        <member name="P:Repository.ContactInformation.EmailAddressIdentifier1">
            <remarks/>
        </member>
        <member name="P:Repository.ContactInformation.EmailAddressIdentifier2">
            <remarks/>
        </member>
        <member name="P:Repository.ContactInformation.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="P:Repository.ContactInformation.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.ContactInformation.SqlDeleteQuery">
            <summary>Delete ContactInformation SQL-query</summary>
        </member>
        <member name="P:Repository.ContactInformation.SqlInsertQuery">
            <summary>Insert ContactInformation SQL-query</summary>
        </member>
        <member name="P:Repository.ContactInformation.SqlSelectQuery">
            <summary>Select PostalAddress SQL-query</summary>
        </member>
        <member name="P:Repository.ContactInformation.SqlUpdateQuery">
            <summary>Update ContactInformation SQL-query</summary>
        </member>
        <member name="P:Repository.ContactInformation.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="M:Repository.ContactInformation.Equals(Repository.ContactInformation)">
            <summary>Compares this ContactInformation to <paramref name="info"/></summary><param name="info" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.ContactInformation.IsEmail(System.String)">
            <returns>Result as bool</returns>
        </member>
        <member name="M:Repository.ContactInformation.IsPhoneNumber(System.String)">
            <returns>Result as bool</returns>
        </member>
        <member name="M:Repository.ContactInformation.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.ContactInformation.IsPersonContactInformation">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.ContactInformation.IsUpdated">
            <summary>Checks wether validation cause changes, that must be updated in database</summary><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.ContactInformation.ToLongString">
            <returns>Content as a long string</returns>
        </member>
        <member name="M:Repository.ContactInformation.ToMultiLineString">
            <returns>Content as a multiline string</returns>
        </member>
        <member name="M:Repository.ContactInformation.ToString">
            <returns>Content as string</returns>
        </member>
        <member name="M:Repository.ContactInformation.Validate">
            <summary>Validates data in this <see cref="T:Repository.ContactInformation"/></summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.DateRange">
            <remarks/>
        </member>
        <member name="M:Repository.DateRange.#ctor">
            <summary>Initializes an empty instance of DateRange</summary>
        </member>
        <member name="M:Repository.DateRange.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of DateRange</summary><param name="from" /><param name="to" />
        </member>
        <member name="P:Repository.DateRange.From">
            <remarks />
        </member>
        <member name="P:Repository.DateRange.To">
            <remarks />
        </member>
        <member name="M:Repository.DateRange.Equals(Repository.DateRange)">
            <summary>Compares this DateRange to <paramref name="range"/></summary><param name="range" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.DateRange.IsEmpty">
            <returns>Result as bool</returns>
        </member>
        <member name="T:Repository.Default">
            <remarks />
        </member>
        <member name="F:Repository.Default.Api3in1Organization">
            <remarks />
        </member>
        <member name="F:Repository.Default.Api3in1OrganizationStructure">
            <remarks />
        </member>
        <member name="F:Repository.Default.Api3in1Person">
            <remarks />
        </member>
        <member name="F:Repository.Default.ApiGetDepartment">
            <remarks />
        </member>
        <member name="F:Repository.Default.ApiGetEmployment">
            <remarks />
        </member>
        <member name="F:Repository.Default.ApiGetInstitution">
            <remarks />
        </member>
        <member name="F:Repository.Default.ApiGetOrganization">
            <remarks />
        </member>
        <member name="F:Repository.Default.ApiGetOrganizationStructure">
            <remarks />
        </member>
        <member name="F:Repository.Default.ApiGetPerson">
            <remarks />
        </member>
        <member name="F:Repository.Default.ApiGetProfession">
            <remarks />
        </member>
        <member name="F:Repository.Default.ApiMochPerson">
            <remarks />
        </member>
        <member name="F:Repository.Default.ContactInformation">
            <remarks />
        </member>
        <member name="F:Repository.Default.DateRange">
            <remarks />
        </member>
        <member name="F:Repository.Default.Department">
            <remarks />
        </member>
        <member name="F:Repository.Default.DepartmentLevelReference">
            <remarks />
        </member>
        <member name="F:Repository.Default.DepartmentReference">
            <remarks />
        </member>
        <member name="F:Repository.Default.DownloadPath">
            <remarks />
        </member>
        <member name="F:Repository.Default.Employment">
            <remarks />
        </member>
        <member name="F:Repository.Default.EmploymentStatus">
            <remarks />
        </member>
        <member name="F:Repository.Default.Institution">
            <remarks />
        </member>
        <member name="F:Repository.Default.Organization">
            <remarks />
        </member>
        <member name="F:Repository.Default.OrganizationStructure">
            <remarks />
        </member>
        <member name="F:Repository.Default.Person">
            <remarks />
        </member>
        <member name="F:Repository.Default.PostalAddress">
            <remarks />
        </member>
        <member name="F:Repository.Default.Profession">
            <remarks />
        </member>
        <member name="F:Repository.Default.SalaryAgreement">
            <remarks />
        </member>
        <member name="F:Repository.Default.SalaryCodeGroup">
            <remarks />
        </member>
        <member name="F:Repository.Default.SuccessfulRun">
            <remarks />
        </member>
        <member name="F:Repository.Default.WorkingTime">
            <remarks />
        </member>
        <member name="F:Repository.Default.XmEmployment">
            <remarks />
        </member>
        <member name="F:Repository.Default.Body">
            <remarks />
        </member>
        <member name="F:Repository.Default.Envelope">
            <remarks />
        </member>
        <member name="T:Repository.Department">
            <remarks/>
        </member>
        <member name="F:Repository.Department.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.Department.#ctor">
            <summary>Initializes an empty instance of Department</summary>
        </member>
        <member name="M:Repository.Department.#ctor(System.DateTime,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Department from database</summary><param name="activationDate" /><param name="deactivationDate" /><param name="departmentUuid" />
            <param name="departmentId" /><param name="departmentLevelId" /><param name="departmentName" /><param name="productionUnitId" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Department.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Department from database</summary><param name="activationDate" /><param name="deactivationDate" /><param name="departmentUuid" />
            <param name="departmentId" /><param name="departmentLevelId" /><param name="departmentName" /><param name="productionUnitId" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Department.#ctor(System.Int32,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Department from database</summary><param name="id" /><param name="activationDate" /><param name="deactivationDate" /><param name="departmentUuid" />
            <param name="departmentId" /><param name="departmentLevelId" /><param name="departmentName" /><param name="productionUnitId" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Department.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Department from database</summary><param name="id" /><param name="activationDate" /><param name="deactivationDate" /><param name="departmentUuid" />
            <param name="departmentId" /><param name="departmentLevelId" /><param name="departmentName" /><param name="productionUnitId" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Department.#ctor(Repository.Department)">
            <summary>Initializes a new instance of Department,that accepts data from existing Department</summary><param name="dept" />
        </member>
        <member name="M:Repository.Department.#ctor(System.String[])">
            <summary>Initializes a new instance of EmploymentDepartment from database</summary><param name="array" />
        </member>
        <member name="P:Repository.Department.Id">
            <remarks />
        </member>
        <member name="P:Repository.Department.ActivationDate">
            <remarks />
        </member>
        <member name="P:Repository.Department.DeactivationDate">
            <remarks />
        </member>
        <member name="P:Repository.Department.DepartmentUuidIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Department.DepartmentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Department.DepartmentLevelIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Department.DepartmentName">
            <remarks />
        </member>
        <member name="P:Repository.Department.ProductionUnitIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Department.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.Department.Active">
            <remarks />
        </member>
        <member name="P:Repository.Department.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.Department.SqlDeleteQuery">
            <summary>Delete Department SQL-query</summary>
        </member>
        <member name="P:Repository.Department.SqlInsertQuery">
            <summary>Insert Department SQL-query</summary>
        </member>
        <member name="P:Repository.Department.SqlSelectQuery">
            <summary>Select Department SQL-query</summary>
        </member>
        <member name="P:Repository.Department.SqlUpdateQuery">
            <summary>Update Department SQL-query</summary>
        </member>
        <member name="P:Repository.Department.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="M:Repository.Department.Equals(Repository.Department)">
            <summary>Compares this Department to <paramref name="dept"/></summary><param name="dept" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.Department.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Department.IsUpdated">
            <summary>Check wether validation of this Department cause changes,that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Department.IsActive">
            <remarks/>
        </member>
        <member name="M:Repository.Department.ToString">
            <returns>Content of this Department as string</returns>
        </member>
        <member name="M:Repository.Department.Validate">
            <summary>Validates data in this Department</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.DepartmentLevelReference">
            <remarks/>
        </member>
        <member name="M:Repository.DepartmentLevelReference.#ctor">
            <summary>Initializes an empty instance of DepartmentLevelReference</summary>
        </member>
        <member name="M:Repository.DepartmentLevelReference.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of DepartmentLevelReference</summary><param name="departmentLevelIdentifier" /><param name="organizationStructure" />
            <param name="seniorDepartmentLevelReference" />
        </member>
        <member name="M:Repository.DepartmentLevelReference.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>Initializes a new instance of DepartmentLevelReference from database</summary><param name="id" /><param name="departmentLevelIdentifier" />
            <param name="organizationStructure" /><param name="seniorDepartmentLevelReference" />
        </member>
        <member name="M:Repository.DepartmentLevelReference.#ctor(System.String[])">
            <summary>Initializes a new instance of DepartmentLevelReference from database</summary><param name="array" />
        </member>
        <member name="M:Repository.DepartmentLevelReference.#ctor(Repository.DepartmentLevelReference)">
            <summary>Initializes a new instance of DepartmentLevelReference, that accepts data from an existing DepartmentLevelReference</summary><param name="reference" />
        </member>
        <member name="P:Repository.DepartmentLevelReference.Id">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentLevelReference.DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentLevelReference.OrganizationStructure">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentLevelReference.SeniorDepartmentLevelReference">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentLevelReference.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="P:Repository.DepartmentLevelReference.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.DepartmentLevelReference.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.DepartmentLevelReference.SqlDeleteQuery">
            <summary>Delete DepartmentLevelReference SQL-query</summary>
        </member>
        <member name="P:Repository.DepartmentLevelReference.SqlInsertQuery">
            <summary>Delete DepartmentLevelReference SQL-query</summary>
        </member>
        <member name="P:Repository.DepartmentLevelReference.SqlSelectQuery">
            <summary>Select DepartmentLevelReference SQL-query</summary>
        </member>
        <member name="P:Repository.DepartmentLevelReference.SqlUpdateQuery">
            <summary>Update DepartmentLevelReference SQL-query</summary>
        </member>
        <member name="M:Repository.DepartmentLevelReference.Equals(Repository.DepartmentLevelReference)">
            <summary>Compares DepartmentLevelReference to <paramref name="reference"/></summary><param name="reference" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.DepartmentLevelReference.IsEmpty">
            <returns>Result as bool</returns>
        </member>
        <member name="M:Repository.DepartmentLevelReference.IsUpdated">
            <summary>Check wether validation of this DepartmentLevelReference cause changes, that must be updated in database</summary><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.DepartmentLevelReference.ToLongString">
            <returns>Content of this DepartmentLevelReference as a long string</returns>
        </member>
        <member name="M:Repository.DepartmentLevelReference.ToString">
            <returns>Content of this DepartmentLevelReference as string</returns>
        </member>
        <member name="M:Repository.DepartmentLevelReference.Validate">
            <summary>Validates data in this DepartmentLevelReference</summary>
        </member>
        <member name="T:Repository.DepartmentReference">
            <remarks/>
        </member>
        <member name="F:Repository.DepartmentReference.CsvHeader">
            <remarks />
        </member>
        <member name="M:Repository.DepartmentReference.#ctor">
            <summary>Initializes an empty instance of DepartmentReference</summary>
        </member>
        <member name="M:Repository.DepartmentReference.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of DepartmentReference</summary><param name="departmentId" /><param name="departmentUuid"></param><param name="departmentLevelId" />
            <param name="organization" /><param name="seniorDepartmentReference" />
        </member>
        <member name="M:Repository.DepartmentReference.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of DepartmentReference from database</summary><param name="id" /><param name="departmentId" /><param name="departmentUuid" />
            <param name="departmentLevelId">DepartmentLevelIdentifier</param><param name="organization" /><param name="seniorDepartmentReference" />
        </member>
        <member name="M:Repository.DepartmentReference.#ctor(System.String[])">
            <summary>Initializes a new instance of DepartmentReference from database</summary><param name="array" />
        </member>
        <member name="M:Repository.DepartmentReference.#ctor(Repository.DepartmentReference)">
            <summary>Initializes a new instance of DepartmentReference from database, that accepts data from an existing DepartmentReference</summary><param name="entity" />
        </member>
        <member name="P:Repository.DepartmentReference.Id">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentReference.DepartmentIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentReference.DepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentReference.DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentReference.Organization">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentReference.SeniorDepartmentReference">
            <remarks/>
        </member>
        <member name="P:Repository.DepartmentReference.CsvValue">
            <remarks />
        </member>
        <member name="P:Repository.DepartmentReference.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.DepartmentReference.SqlDeleteQuery">
            <summary>DELETE FROM [dbo].[DepartmentReferenceList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.DepartmentReference.SqlInsertQuery">
            <summary>INSERT INTO [dbo].[DepartmentReferenceList]([DepartmentIdentifier],[DepartmentUuidIdentifier],[DepartmentLevelIdentifier],[Organization],[SeniorDepartmentReference]) 
            VALUES('DepartmentIdentifier','DepartmentUuidIdentifier','DepartmentLevelIdentifier','Organization','SeniorDepartmentReference')</summary>
        </member>
        <member name="P:Repository.DepartmentReference.SqlSelectQuery">
            <summary>SELECT * FROM [dbo].[DepartmentReferenceList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.DepartmentReference.SqlUpdateQuery">
            <summary>UPDATE[dbo].[DepartmentReferenceList] SET [DepartmentIdentifier]='DepartmentIdentifier',[DepartmentUuidIdentifier]='DepartmentUuidIdentifier',[DepartmentLevelIdentifier]='DepartmentLevelIdentifier',
            [Organization]='Organization',[SeniorDepartmentReference]='SeniorDepartmentReference' WHERE [Id]=Id</summary>
        </member>
        <member name="M:Repository.DepartmentReference.Equals(Repository.DepartmentReference)">
            <summary>Compares this DepartmentReference to <paramref name="reference"/></summary><param name="reference" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.DepartmentReference.IsEmpty">
            <returns>Result as bool</returns>
        </member>
        <member name="M:Repository.DepartmentReference.IsUpdated">
            <summary>Check wether validation of this DepartmentReference cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.DepartmentReference.ToLongString">
            <returns>Content of DepartmentReference as a long string</returns>
        </member>
        <member name="M:Repository.DepartmentReference.ToString">
            <returns>Content of this DepartmentReference as string</returns>
        </member>
        <member name="M:Repository.DepartmentReference.Validate">
            <summary>Validates data in this <see cref="T:Repository.DepartmentReference"/></summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.Dictionaries">
            <remarks />
        </member>
        <member name="P:Repository.Dictionaries.TempBasicDepartmentLevelReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempBasicDepartmentReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempContactInformationDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempDepartmentDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempDepartmentLevelReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempDepartmentReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempDownloadPathDict">
            <remarks />
        </member>
        <member name="P:Repository.Dictionaries.TempEmploymentDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempEmploymentStatusDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempInstitutionDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel1DepartmentLevelReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel2DepartmentLevelReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel3DepartmentLevelReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel4DepartmentLevelReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel5DepartmentLevelReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel1DepartmentReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel2DepartmentReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel3DepartmentReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel4DepartmentReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempLevel5DepartmentReferenceDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempOrganizationDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempOrganizationStructureDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempPersonDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempPostalAddressDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempProfessionDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempSalaryAgreementDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempSalaryCodeGroupDict">
            <remarks/>
        </member>
        <member name="P:Repository.Dictionaries.TempSuccessfulRunDict">
            <remarks />
        </member>
        <member name="P:Repository.Dictionaries.TempWorkingTimeDict">
            <remarks/>
        </member>
        <member name="T:Repository.DownloadPath">
            <remarks/>
        </member>
        <member name="M:Repository.DownloadPath.#ctor">
            <summary>Initializes an empty instance of DownloadPath</summary>
        </member>
        <member name="M:Repository.DownloadPath.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Initializes a new instance of DownloadPath</summary><param name="instId">InstitutionIdentifier</param><param name="sdAapi" /><param name="path" /><param name="dTime">DownloadTime</param><param name="uTime">UpdateTime</param><param name="upd">Updated</param>
        </member>
        <member name="M:Repository.DownloadPath.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Initializes an instance of DownloadPath from database</summary><param name="id" /><param name="instId">InstitutionIdentifier</param><param name="sdAapi" /><param name="path" /><param name="dTime">DownloadTime</param><param name="uTime">UpdateTime</param><param name="upd">Updated</param>
        </member>
        <member name="M:Repository.DownloadPath.#ctor(System.String[])">
            <summary>Initializes a new instance of DownloadPath from database</summary><param name="array" />
        </member>
        <member name="M:Repository.DownloadPath.#ctor(Repository.DownloadPath)">
            <summary>Initializes a new instance of DownloadPath, that accepts data from existing DownloadPath</summary><param name="path" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="P:Repository.DownloadPath.Id">
            <remarks/>
        </member>
        <member name="P:Repository.DownloadPath.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.DownloadPath.SdApi">
            <remarks/>
        </member>
        <member name="P:Repository.DownloadPath.Path">
            <remarks/>
        </member>
        <member name="P:Repository.DownloadPath.DownloadTime">
            <remarks/>
        </member>
        <member name="P:Repository.DownloadPath.UpdateTime">
            <remarks/>
        </member>
        <member name="P:Repository.DownloadPath.Updated">
            <remarks/>
        </member>
        <member name="P:Repository.DownloadPath.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="P:Repository.DownloadPath.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.DownloadPath.PathIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.DownloadPath.SqlDeleteQuery">
            <summary>Delete DownloadPath SQL-query</summary>
        </member>
        <member name="P:Repository.DownloadPath.SqlInsertQuery">
            <summary>Insert DownloadPath SQL-query</summary>
        </member>
        <member name="P:Repository.DownloadPath.SqlSelectQuery">
            <summary>Select DownloadPath SQL-query</summary>
        </member>
        <member name="P:Repository.DownloadPath.SqlUpdateQuery">
            <summary>Update DownloadPath SQL-query</summary>
        </member>
        <member name="P:Repository.DownloadPath.SqlUpdateDownloadedQuery">
            <summary>Update DownloadPath ownloaded SQL-query</summary>
        </member>
        <member name="P:Repository.DownloadPath.SqlUpdateUpdatedQuery">
            <summary>Update DownloadPath updated SQL-query</summary>
        </member>
        <member name="P:Repository.DownloadPath.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="M:Repository.DownloadPath.Equals(Repository.DownloadPath)">
            <summary>Compares this DownloadPath to <paramref name="path"/></summary><param name="path" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.DownloadPath.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.DownloadPath.SetDownloadTime">
            <summary>Sets time, when file was downloaded to disc</summary>
        </member>
        <member name="M:Repository.DownloadPath.SetUpdateTime">
            <summary>Sets time, when data was updated to database</summary>
        </member>
        <member name="M:Repository.DownloadPath.ToLongString">
            <returns>Content of this DownloadPath as a long string</returns>
        </member>
        <member name="M:Repository.DownloadPath.ToMultiLineString">
            <returns>Content of this DownloadPath as a multi line string</returns>
        </member>
        <member name="M:Repository.DownloadPath.ToString">
            <returns>Content of this DownloadPath as string</returns>
        </member>
        <member name="M:Repository.DownloadPath.ToSqlUpdateDownloadedQuery">
            <returns>Update DownloadPath SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:Repository.DownloadPath.ToSqlUpdateUpdatedQuery">
            <returns>Update DownloadPath SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="T:Repository.Employment">
            <remarks/>
        </member>
        <member name="F:Repository.Employment.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.Employment.#ctor">
            <summary>Initializes an empty instance of Employment</summary>
        </member>
        <member name="M:Repository.Employment.#ctor(System.String,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Employment</summary><param name="employmentId" /><param name="employmentDate" /><param name="anniversaryDate" />
            <param name="institutionId" /><param name="employee" /><param name="department" /><param name="profession" />
        </member>
        <member name="M:Repository.Employment.#ctor(System.Int32,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>Initializes an instance of Employment from database</summary><param name="id" /><param name="employmentId" /><param name="employmentDate" />
            <param name="anniversaryDate" /><param name="institutionId" /><param name="department" /><param name="profession" />
        </member>
        <member name="M:Repository.Employment.#ctor(System.String[])">
            <summary>Initializes a new instance of Employment from database</summary><param name="array" />
        </member>
        <member name="M:Repository.Employment.#ctor(Repository.Employment)">
            <summary>Initializes a new instance of Employment, that accepts data from an existing Employment</summary><param name="entity" />
        </member>
        <member name="P:Repository.Employment.Id">
            <remarks/>
        </member>
        <member name="P:Repository.Employment.EmploymentIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.Employment.EmploymentDate">
            <remarks/>
        </member>
        <member name="P:Repository.Employment.AnniversaryDate">
            <remarks/>
        </member>
        <member name="P:Repository.Employment.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.Employment.Employee">
            <remarks/>
        </member>
        <member name="P:Repository.Employment.EmploymentDepartment">
            <remarks/>
        </member>
        <member name="P:Repository.Employment.EmploymentProfession">
            <remarks/>
        </member>
        <member name="P:Repository.Employment.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.Employment.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.Employment.SqlDeleteQuery">
            <summary>DELETE FROM [dbo].[EmploymentList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.Employment.SqlInsertQuery">
            <summary>INSERT INTO [dbo].[EmploymentList]([EmploymentIdentifier],[EmploymentDate],[AnniversaryDate],[InstitutionIdentifier],[Employee],[EmploymentDepartment],[EmploymentProfession]) VALUES('EmploymentIdentifier',
            'EmploymentDate','AnniversaryDate','InstitutionIdentifier','Employee','EmploymentDepartment','EmploymentProfession')</summary>
        </member>
        <member name="P:Repository.Employment.SqlSelectQuery">
            <summary>SELECT * FROM [dbo].[EmploymentList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.Employment.SqlUpdateQuery">
            <summary>UPDATE [dbo].[EmploymentList] SET [EmploymentIdentifier]='EmploymentIdentifier',[EmploymentDate]='this.EmploymentDate',[AnniversaryDate]='AnniversaryDate',[InstitutionIdentifier]='InstitutionIdentifier',
            [Employee]='Employee',[EmploymentDepartment]='EmploymentDepartment',[EmploymentProfession]='EmploymentProfession' WHERE [Id]=Id</summary>
        </member>
        <member name="M:Repository.Employment.Equals(Repository.Employment)">
            <summary>Compares this Employment to <paramref name="empl"/></summary><param name="empl" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.Employment.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Employment.IsUpdated">
            <summary>Check wether validation of this Employment cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Employment.RetrieveControlDigit(System.String)">
            <returns>13th control digit for <paramref name="num12"/> as string</returns><param name="num12">12 digit numeric string</param><exception cref="T:Repository.ArgumentInvalidException" />
        </member>
        <member name="M:Repository.Employment.RetrieveTenDigitEmploymentIdentifier">
            <returns>EmploymentIdentifier as ten digit numeric string</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Employment.RetrieveEmploymentUniqueIdentifier">
            <returns>Unique identifier for this Employment as string</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Employment.RetrieveIntArray(System.String)">
            <returns><paramref name="number"/> as int[]</returns><param name="number">numeric string</param>
        </member>
        <member name="M:Repository.Employment.ToString">
            <returns>Content of this Employment as string</returns>
        </member>
        <member name="M:Repository.Employment.ToTwoDigitInstitutionIdentifier(System.String)">
            <returns>Two digit <paramref name="institutionId"/> as string</returns><param name="institutionId" />
        </member>
        <member name="M:Repository.Employment.Validate">
            <summary>Validates data in Employment</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.EmploymentProfession">
            <remarks/>
        </member>
        <member name="F:Repository.EmploymentProfession.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.EmploymentProfession.#ctor">
            <summary>Initializes an empty instance of Profession</summary>
        </member>
        <member name="M:Repository.EmploymentProfession.#ctor(System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of EmploymentProfession</summary><param name="activationDate" /><param name="deactivationDate" />
            <param name="jobPositionId" /><param name="institutionId" /><param name="employmentName" /><param name="appointmentCode" />
        </member>
        <member name="M:Repository.EmploymentProfession.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of EmploymentProfession from SDWS</summary><param name="activationDate" /><param name="deactivationDate" />
            <param name="jobPositionId" /><param name="institutionId" /><param name="employmentName" /><param name="appointmentCode" />
        </member>
        <member name="M:Repository.EmploymentProfession.#ctor(System.Int32,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of EmploymentProfession from database</summary><param name="id" /><param name="activationDate" /><param name="deactivationDate" />
            <param name="jobPositionId" /><param name="institutionId" /><param name="employmentName" /><param name="appointmentCode" />
        </member>
        <member name="M:Repository.EmploymentProfession.#ctor(Repository.EmploymentProfession)">
            <summary>Initializes a new instance of EmploymentProfession, that accepts data from existing EmploymentProfession</summary><param name="profession" />
        </member>
        <member name="M:Repository.EmploymentProfession.#ctor(System.String[])">
            <summary>Initializes a new instance of EmploymentProfession from database</summary><param name="array" />
        </member>
        <member name="P:Repository.EmploymentProfession.Id">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentProfession.ActivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentProfession.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentProfession.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentProfession.JobPositionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentProfession.EmploymentName">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentProfession.AppointmentCode">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentProfession.Active">
            <remarks />
        </member>
        <member name="P:Repository.EmploymentProfession.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.EmploymentProfession.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.EmploymentProfession.SqlDeleteQuery">
            <summary>DELETE FROM [dbo].[EmploymentProfessionList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.EmploymentProfession.SqlInsertQuery">
            <summary>@"INSERT INTO [dbo].[EmploymentProfessionList]([ActivationDate],[DeactivationDate],[JobPositionIdentifier],[InstitutionIdentifier],[EmploymentName],[AppointmentCode])
            VALUES('ActivationDate','DeactivationDate','JobPositionIdentifier','InstitutionIdentifier','EmploymentName','AppointmentCode')</summary>
        </member>
        <member name="P:Repository.EmploymentProfession.SqlSelectQuery">
            <summary>Select FROM [dbo].[EmploymentProfessionList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.EmploymentProfession.SqlUpdateQuery">
            <summary>UPDATE dbo.[EmploymentProfessionList] SET [ActivationDate]='ActivationDate',[DeactivationDate]='DeactivationDate',[JobPositionIdentifier]='JobPositionIdentifier',[InstitutionIdentifier]='.InstitutionIdentifier',
            [EmploymentName]='EmploymentName',[AppointmentCode]='AppointmentCode' WHERE [Id]=Id</summary>
        </member>
        <member name="M:Repository.EmploymentProfession.Equals(Repository.EmploymentProfession)">
            <summary>Compares this EmploymentProfession to <paramref name="prof"/></summary><param name="prof" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.EmploymentProfession.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.EmploymentProfession.IsUpdated">
            <summary> Check wether validation of this Profession cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.EmploymentProfession.IsActive">
            <remarks/>
        </member>
        <member name="M:Repository.EmploymentProfession.ToLongString">
            <returns>Content of this Profession as a long string</returns>
        </member>
        <member name="M:Repository.EmploymentProfession.ToString">
            <returns>Content of this Profession as string</returns>
        </member>
        <member name="M:Repository.EmploymentProfession.Validate">
            <summary>Validates data in this EmploymentProfession</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.EmploymentStatus">
            <remarks/>
        </member>
        <member name="F:Repository.EmploymentStatus.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.EmploymentStatus.#ctor">
            <summary>Initializes an empty instance of EmploymentStatus</summary>
        </member>
        <member name="M:Repository.EmploymentStatus.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.Boolean)">
            <summary>Initializes a new instance of EmploymentStatus</summary><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" />
            <param name="employmentStatusCode" /><param name="markedForDeletion" />
        </member>
        <member name="M:Repository.EmploymentStatus.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of EmploymentStatus from SDWS</summary><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" />
            <param name="employmentStatusCode" /><param name="markedForDeletion" />
        </member>
        <member name="M:Repository.EmploymentStatus.#ctor(System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.String,System.Boolean)">
            <summary>Initializes a new instance of EmploymentStatus from database</summary><param name="id" /><param name="employmentId" /><param name="institutionId" />
            <param name="activationDate" /><param name="deactivationDate" /><param name="employmentStatusCode" /><param name="markedForDeletion" />
        </member>
        <member name="M:Repository.EmploymentStatus.#ctor(System.String[])">
            <summary>Initializes a new instance of EmploymentStatus from database</summary><param name="array" />
        </member>
        <member name="M:Repository.EmploymentStatus.#ctor(Repository.EmploymentStatus)">
            <summary>Initializes a new instance of EmploymentStatus, that accepts data from existing EmploymentStatus</summary><param name="employmentStatus" />
        </member>
        <member name="P:Repository.EmploymentStatus.Id">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentStatus.EmploymentIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentStatus.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentStatus.ActivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentStatus.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentStatus.EmploymentStatusCode">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentStatus.MarkedForDeletion">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentStatus.Active">
            <remarks/>
        </member>
        <member name="P:Repository.EmploymentStatus.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.EmploymentStatus.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.EmploymentStatus.SqlDeleteQuery">
            <summary>DELETE FROM [dbo].[EmploymentStatusList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.EmploymentStatus.SqlInsertQuery">
            <summary>INSERT INTO [dbo].[EmploymentStatusList]([EmploymentIdentifier],[InstitutionIdentifier],[ActivationDate],[DeactivationDate],[EmploymentStatusCode],[MarkedForDeletion])
            VALUES('EmploymentIdentifier','InstitutionIdentifier','ActivationDate','DeactivationDate','EmploymentStatusCode','MarkedForDeletion')</summary>
        </member>
        <member name="P:Repository.EmploymentStatus.SqlSelectQuery">
            <summary>SELECT * FROM [dbo].[EmploymentStatusList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.EmploymentStatus.SqlUpdateQuery">
            <summary>UPDATE [dbo].[EmploymentStatusList] SET [EmploymentIdentifier]='EmploymentIdentifier',[InstitutionIdentifier]='InstitutionIdentifier',[ActivationDate]='ActivationDate',[DeactivationDate]='DeactivationDate',
            [EmploymentStatusCode]='EmploymentStatusCode',[MarkedForDeletion]='MarkedForDeletion' WHERE [Id]=Id</summary>
        </member>
        <member name="M:Repository.EmploymentStatus.Equals(Repository.EmploymentStatus)">
            <summary>Compares this EmploymentStatus to <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.EmploymentStatus.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.EmploymentStatus.IsUpdated">
            <summary>Check wether validation of this EmploymentStatus cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.EmploymentStatus.IsActive">
            <remarks/>
        </member>
        <member name="M:Repository.EmploymentStatus.ToLongString">
            <returns>Content of this EmploymentStatus as a long string</returns>
        </member>
        <member name="M:Repository.EmploymentStatus.ToMultiLineString">
            <returns>Content of this EmploymentStatus as a multi line string</returns>
        </member>
        <member name="M:Repository.EmploymentStatus.ToString">
            <returns>Content of this EmploymentStatus as string</returns>
        </member>
        <member name="M:Repository.EmploymentStatus.Validate">
            <summary>Validates data in this EmploymentStatus</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.Enumerator">
            <remarks/>
        </member>
        <member name="T:Repository.Enumerator.PeriodCode">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.PeriodCode.day">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.PeriodCode.week">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.PeriodCode.fortnight">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.PeriodCode.halfmonth">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.PeriodCode.month">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.PeriodCode.year">
            <remarks/>
        </member>
        <member name="T:Repository.Enumerator.ExitCode">
            <remarks />
        </member>
        <member name="F:Repository.Enumerator.ExitCode.Success">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.ExitCode.NoSuccessfulRun">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.ExitCode.NotAllDataRetrieved">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.ExitCode.NotAllDataDeserialized">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.ExitCode.NotAllDataCleaned">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.ExitCode.NotAllDatabaseUpdated">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.ExitCode.InvalidDataException">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.ExitCode.InvalidOption">
            <remarks/>
        </member>
        <member name="F:Repository.Enumerator.ExitCode.UnhandledError">
            <remarks/>
        </member>
        <member name="T:Repository.Error">
            <Summary>Common Error messages</Summary>
        </member>
        <member name="F:Repository.Error.CantBeEmpty">
            <remarks />
        </member>
        <member name="F:Repository.Error.CantBeNeg">
            <remarks />
        </member>
        <member name="F:Repository.Error.CantBeNull">
            <remarks />
        </member>
        <member name="F:Repository.Error.CantBeNullEmpty">
            <remarks />
        </member>
        <member name="F:Repository.Error.CantBeNullWhSp">
            <remarks />
        </member>
        <member name="F:Repository.Error.CantBeWhSp">
            <remarks />
        </member>
        <member name="F:Repository.Error.CantContWhSp">
            <remarks />
        </member>
        <member name="F:Repository.Error.DbNonExist">
            <remarks />
        </member>
        <member name="F:Repository.Error.ErrReadingFile">
            <remarks />
        </member>
        <member name="F:Repository.Error.ErrReadFileCont">
            <remarks />
        </member>
        <member name="F:Repository.Error.ErrWriteFile">
            <remarks />
        </member>
        <member name="F:Repository.Error.ErrWriteStrLine">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvBaseAddr">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvBit">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvDate">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvDay">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvDelId">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvHour">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvId">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvInsId">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvInt">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvLogFilePath">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvMin">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvMon">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvRef">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvSec">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvSelId">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvTime">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvTypeParam">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvUpdId">
            <remarks />
        </member>
        <member name="F:Repository.Error.InvYear">
            <remarks />
        </member>
        <member name="F:Repository.Error.MsgLngExc">
            <remarks />
        </member>
        <member name="F:Repository.Error.NoConIO">
            <remarks />
        </member>
        <member name="F:Repository.Error.NotDeseriz">
            <remarks />
        </member>
        <member name="F:Repository.Error.NotSeriz">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkArg">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkArgs">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkAPI">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkAPIs">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkInst">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkParam">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkParams">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkTarget">
            <remarks />
        </member>
        <member name="F:Repository.Error.UnkTargets">
            <remarks />
        </member>
        <member name="T:Repository.ArgumentEmptyException">
            <Summary>Common Exception</Summary>
        </member>
        <member name="M:Repository.ArgumentEmptyException.#ctor">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentEmptyException.#ctor(System.String)">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentEmptyException.#ctor(System.String,System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentEmptyException.#ctor(System.String,System.String)">
            <remarks />
        </member>
        <member name="P:Repository.ArgumentEmptyException.ParameterName">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentEmptyException.ToErrorString">
            <remarks />
        </member>
        <member name="T:Repository.ArgumentInvalidException">
            <Summary>Common Exception</Summary>
        </member>
        <member name="M:Repository.ArgumentInvalidException.#ctor">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentInvalidException.#ctor(System.String)">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentInvalidException.#ctor(System.String,System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentInvalidException.#ctor(System.String,System.Object,System.String)">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentInvalidException.#ctor(System.String,System.String)">
            <remarks />
        </member>
        <member name="P:Repository.ArgumentInvalidException.ParameterName">
            <remarks />
        </member>
        <member name="M:Repository.ArgumentInvalidException.ToErrorString">
            <remarks />
        </member>
        <member name="T:Repository.EmptyRefException">
            <Summary>Common Exception</Summary>
        </member>
        <member name="M:Repository.EmptyRefException.#ctor">
            <remarks />
        </member>
        <member name="M:Repository.EmptyRefException.#ctor(System.String)">
            <remarks />
        </member>
        <member name="M:Repository.EmptyRefException.#ctor(System.String,System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.EmptyRefException.#ctor(System.String,System.Object,System.String)">
            <remarks />
        </member>
        <member name="M:Repository.EmptyRefException.#ctor(System.String,System.String)">
            <remarks />
        </member>
        <member name="P:Repository.EmptyRefException.ReferenceName">
            <remarks />
        </member>
        <member name="M:Repository.EmptyRefException.ToErrorString">
            <remarks />
        </member>
        <member name="T:Repository.ExpressionException">
            <Summary>Common Exception</Summary>
        </member>
        <member name="M:Repository.ExpressionException.#ctor">
            <remarks />
        </member>
        <member name="M:Repository.ExpressionException.#ctor(System.String)">
            <remarks />
        </member>
        <member name="M:Repository.ExpressionException.#ctor(System.String,System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.ExpressionException.#ctor(System.String,System.Object,System.String)">
            <remarks />
        </member>
        <member name="M:Repository.ExpressionException.#ctor(System.String,System.String)">
            <remarks />
        </member>
        <member name="P:Repository.ExpressionException.ActualValue">
            <remarks />
        </member>
        <member name="P:Repository.ExpressionException.ExpressionName">
            <remarks />
        </member>
        <member name="M:Repository.ExpressionException.ToErrorString">
            <remarks />
        </member>
        <member name="M:Repository.ExpressionException.ToErrorString(System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.ExpressionException.ToErrorString(Repository.ExpressionException)">
            <remarks />
        </member>
        <member name="T:Repository.InvalidRefException">
            <Summary>Common Exception</Summary>
        </member>
        <member name="M:Repository.InvalidRefException.#ctor">
            <remarks />
        </member>
        <member name="M:Repository.InvalidRefException.#ctor(System.String)">
            <remarks />
        </member>
        <member name="M:Repository.InvalidRefException.#ctor(System.String,System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.InvalidRefException.#ctor(System.String,System.Object,System.String)">
            <remarks />
        </member>
        <member name="M:Repository.InvalidRefException.#ctor(System.String,System.String)">
            <remarks />
        </member>
        <member name="P:Repository.InvalidRefException.ReferenceName">
            <remarks />
        </member>
        <member name="M:Repository.InvalidRefException.ToErrorString">
            <remarks />
        </member>
        <member name="T:Repository.NullRefException">
            <Summary>Common Exception</Summary>
        </member>
        <member name="M:Repository.NullRefException.#ctor">
            <remarks />
        </member>
        <member name="M:Repository.NullRefException.#ctor(System.String)">
            <remarks />
        </member>
        <member name="M:Repository.NullRefException.#ctor(System.String,System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.NullRefException.#ctor(System.String,System.String)">
            <remarks />
        </member>
        <member name="P:Repository.NullRefException.ReferenceName">
            <remarks />
        </member>
        <member name="M:Repository.NullRefException.ToErrorString">
            <remarks />
        </member>
        <member name="T:Repository.SyntaxRefException">
            <Summary>Common Exception</Summary>
        </member>
        <member name="M:Repository.SyntaxRefException.#ctor">
            <remarks />
        </member>
        <member name="M:Repository.SyntaxRefException.#ctor(System.String)">
            <remarks />
        </member>
        <member name="M:Repository.SyntaxRefException.#ctor(System.String,System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.SyntaxRefException.#ctor(System.String,System.Object,System.String)">
            <remarks />
        </member>
        <member name="M:Repository.SyntaxRefException.#ctor(System.String,System.String)">
            <remarks />
        </member>
        <member name="P:Repository.SyntaxRefException.ReferenceName">
            <remarks />
        </member>
        <member name="M:Repository.SyntaxRefException.ToErrorString">
            <remarks />
        </member>
        <member name="T:Repository.UnknownRefException">
            <remarks />
        </member>
        <member name="M:Repository.UnknownRefException.#ctor">
            <remarks />
        </member>
        <member name="M:Repository.UnknownRefException.#ctor(System.String)">
            <remarks />
        </member>
        <member name="M:Repository.UnknownRefException.#ctor(System.String,System.Exception)">
            <remarks />
        </member>
        <member name="M:Repository.UnknownRefException.#ctor(System.String,System.String)">
            <remarks />
        </member>
        <member name="P:Repository.UnknownRefException.ReferenceName">
            <remarks />
        </member>
        <member name="M:Repository.UnknownRefException.ToErrorString">
            <remarks />
        </member>
        <member name="T:Repository.Institution">
            <remarks/>
        </member>
        <member name="M:Repository.Institution.#ctor">
            <summary>Initializes an empty instance of Institution</summary>
        </member>
        <member name="M:Repository.Institution.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of Institution</summary><param name="institutionUuid" /><param name="institutionId" /><param name="institutionName" />
        </member>
        <member name="M:Repository.Institution.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Institution from database</summary><param name="id" /><param name="institutionUuid" /><param name="institutionId" /><param name="institutionName" />
        </member>
        <member name="M:Repository.Institution.#ctor(System.String[])">
            <summary>Initializes a new instance of Institution from database</summary><param name="array" />
        </member>
        <member name="M:Repository.Institution.#ctor(Repository.Institution)">
            <summary>Initializes a new instance of Institution, that accepts data from an existing Institution</summary><param name="inst" />
        </member>
        <member name="P:Repository.Institution.Id">
            <remarks />
        </member>
        <member name="P:Repository.Institution.InstitutionUuidIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Institution.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.Institution.InstitutionName">
            <remarks />
        </member>
        <member name="P:Repository.Institution.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="P:Repository.Institution.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.Institution.SqlDeleteQuery">
            <summary>Delete Institution SQL-query</summary>
        </member>
        <member name="P:Repository.Institution.SqlInsertQuery">
            <summary>Insert Institution SQL-query</summary>
        </member>
        <member name="P:Repository.Institution.SqlSelectQuery">
            <summary>Select Institution SQL-query</summary>
        </member>
        <member name="P:Repository.Institution.SqlUpdateQuery">
            <summary>Update Institution SQL-query </summary>
        </member>
        <member name="P:Repository.Institution.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="M:Repository.Institution.Equals(Repository.Institution)">
            <summary>Compares this Institution to <paramref name="inst"/></summary><param name="inst" /><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Institution.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Institution.IsUpdated">
            <summary>Check wether validation of this Institution cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Institution.ToLongString">
            <returns>Content of this Institution as long string</returns>
        </member>
        <member name="M:Repository.Institution.ToString">
            <returns>Content of this Institution as string</returns>
        </member>
        <member name="M:Repository.Institution.ToTwoDigitInstitutionIdentifier">
            <returns>This InstitutionIdentifier as two digit numeric string</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Institution.Validate">
            <summary>Validates data in this Institution</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.IntraNoteViewGetDepartmentUpDown">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.DepartmentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.DepartmentName">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.DepartmentReferencesId">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.UpReference">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.UpIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.UpName">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.DownReference">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.DownIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetDepartmentUpDown.DownName">
            <remarks />
        </member>
        <member name="T:Repository.IntraNoteViewGetUniquePersonEmail">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.EmploymentId">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.PersonCivilRegistrationIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Fornavn">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Efternavn">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Adresse">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Postnr">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.By">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Kommune">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Land">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Phone1">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Phone2">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Email1">
            <remarks />
        </member>
        <member name="P:Repository.IntraNoteViewGetUniquePersonEmail.Email2">
            <remarks />
        </member>
        <member name="T:Repository.Lists">
            <remarks />
        </member>
        <member name="P:Repository.Lists.BasicDepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.BasicDepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.ContactInformationList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.DepartmentList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.EmploymentList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.EmploymentStatusList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.InstitutionList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level1DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level2DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level3DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level4DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level5DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level1DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level2DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level3DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level4DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.Level5DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.OrganizationList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.OrganizationStructureList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.PersonList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.PostalAddressList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.ProfessionList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.SalaryAgreementList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.SalaryCodeGroupList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.WorkingTimeList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.XmEmployments">
            <remarks />
        </member>
        <member name="P:Repository.Lists.TempBasicDepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempBasicDepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempContactInformationList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempDepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempDepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempDepartmentList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempEmploymentList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempEmploymentStatusList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempInstitutionList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel1DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel2DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel3DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel4DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel5DepartmentLevelReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel1DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel2DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel3DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel4DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempLevel5DepartmentReferenceList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempOrganizationList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempOrganizationStructureList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempPersonList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempPostalAddressList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempProfessionList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempSalaryAgreementList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempSalaryCodeGroupList">
            <remarks/>
        </member>
        <member name="P:Repository.Lists.TempWorkingTimeList">
            <remarks/>
        </member>
        <member name="T:Repository.Organization">
            <remarks/>
        </member>
        <member name="F:Repository.Organization.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.Organization.#ctor">
            <summary>Initializes an empty instance of Organization</summary>
        </member>
        <member name="M:Repository.Organization.#ctor(System.DateTime,System.DateTime,System.String)">
            <summary>Initializes a new instance of Organization</summary><param name="activationDate" /><param name="deactivationDate" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Organization.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of Organization from SDWS</summary><param name="activationDate" /><param name="deactivationDate" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Organization.#ctor(System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>Initializes an instance of Organization from database</summary><param name="id" /><param name="activationDate" /><param name="deactivationDate" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Organization.#ctor(System.String[])">
            <summary>Initializes a new instance of Organization from database</summary><param name="array" />
        </member>
        <member name="M:Repository.Organization.#ctor(Repository.Organization)">
            <summary>Initializes a new instance of Organization, that accepts data from an existing Organization</summary><param name="org">Organization</param>
        </member>
        <member name="P:Repository.Organization.Id">
            <remarks/>
        </member>
        <member name="P:Repository.Organization.ActivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.Organization.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.Organization.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.Organization.Active">
            <remarks/>
        </member>
        <member name="P:Repository.Organization.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.Organization.SqlDeleteQuery">
            <summary>Delete Organization SQL-query</summary>
        </member>
        <member name="P:Repository.Organization.SqlInsertQuery">
            <summary>Insert Organization SQL-query</summary>
        </member>
        <member name="P:Repository.Organization.SqlSelectQuery">
            <summary>Select Organization SQL-query</summary>
        </member>
        <member name="P:Repository.Organization.SqlUpdateQuery">
            <summary>Update Organization SQL-query</summary>
        </member>
        <member name="P:Repository.Organization.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="M:Repository.Organization.Equals(Repository.Organization)">
            <summary>Compares this Organization to <paramref name="org"/></summary><param name="org" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.Organization.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Organization.IsUpdated">
            <summary>Check wether validation of this <see cref="T:Repository.Organization"/> cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Organization.IsActive">
            <remarks/>
        </member>
        <member name="M:Repository.Organization.ToString">
            <returns>Content of this Organization as string</returns>
        </member>
        <member name="M:Repository.Organization.Validate">
            <summary>Validates data in this Organization</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.OrganizationStructure">
            <remarks/>
        </member>
        <member name="M:Repository.OrganizationStructure.#ctor">
            <summary>Initializes an empty instance of OrganizationStructure</summary>
        </member>
        <member name="M:Repository.OrganizationStructure.#ctor(System.String)">
            <summary>Initializes a new instance of OrganizationStructure</summary><param name="institutionId" />
        </member>
        <member name="M:Repository.OrganizationStructure.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance of OrganizationStructure from database</summary><param name="id" /><param name="institutionId" />
        </member>
        <member name="M:Repository.OrganizationStructure.#ctor(System.String[])">
            <summary>Initializes a new instance of OrganizationStructure from database</summary><param name="array" />
        </member>
        <member name="M:Repository.OrganizationStructure.#ctor(Repository.OrganizationStructure)">
            <summary>Initializes a new instance of OrganizationStructure, that accepts data from an existing OrganizationStructure</summary><param name="entity" />
        </member>
        <member name="P:Repository.OrganizationStructure.Id">
            <remarks/>
        </member>
        <member name="P:Repository.OrganizationStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.OrganizationStructure.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="P:Repository.OrganizationStructure.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.OrganizationStructure.SqlDeleteQuery">
            <returns>Delete OrganizationStructure SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="P:Repository.OrganizationStructure.SqlInsertQuery">
            <returns>Insert OrganizationStructure SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="P:Repository.OrganizationStructure.SqlSelectQuery">
            <returns>Select OrganizationStructure SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="P:Repository.OrganizationStructure.SqlUpdateQuery">
            <returns>Update OrganizationStructure SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="P:Repository.OrganizationStructure.TKey">
            <remarks/>
        </member>
        <member name="M:Repository.OrganizationStructure.Equals(Repository.OrganizationStructure)">
            <summary>Compares this OrganizationStructure to <paramref name="structure"/></summary><param name="structure" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.OrganizationStructure.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.OrganizationStructure.IsUpdated">
            <summary>Checks wether validation of this <see cref="T:Repository.OrganizationStructure"/> cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.OrganizationStructure.ToString">
            <returns>Content of OrganizationStructure as string</returns>
        </member>
        <member name="M:Repository.OrganizationStructure.Validate">
            <summary>Validates data in this OrganizationStructure</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.Person">
            <remarks/>
        </member>
        <member name="M:Repository.Person.#ctor">
            <summary>Initializes an empty instance of Person</summary>
        </member>
        <member name="M:Repository.Person.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Person</summary><param name="personCivilRegistrationId" /><param name="personGivenName" /><param name="personSurnameName" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Person.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of Person from database</summary><param name="id" /><param name="personCivilRegistrationId" /><param name="personGivenName" />
            <param name="personSurnameName" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Person.#ctor(System.String[])">
            <summary>Initializes a new instance of Person from database</summary><param name="array" />
        </member>
        <member name="M:Repository.Person.#ctor(Repository.Person)">
            <summary>Initializes a new instance of Person, that accepts data from an existing Person</summary><param name="entity"></param>
        </member>
        <member name="P:Repository.Person.Id">
            <remarks/>
        </member>
        <member name="P:Repository.Person.PersonCivilRegistrationIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.Person.PersonGivenName">
            <remarks/>
        </member>
        <member name="P:Repository.Person.PersonSurnameName">
            <remarks/>
        </member>
        <member name="P:Repository.Person.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.Person.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="P:Repository.Person.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.Person.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.Person.SqlDeleteQuery">
            <summary>Delete Person SQL-query</summary>
        </member>
        <member name="P:Repository.Person.SqlInsertQuery">
            <summary>Insert Person SQL-query</summary>
        </member>
        <member name="P:Repository.Person.SqlSelectQuery">
            <summary>Select Person SQL-query</summary>
        </member>
        <member name="P:Repository.Person.SqlUpdateQuery">
            <summary>Update Person SQL-query</summary>
        </member>
        <member name="M:Repository.Person.Equals(Repository.Person)">
            <summary>Compares this Person to <paramref name="pers"/></summary><param name="pers" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.Person.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Person.IsUpdated">
            <summary>Checks wether validation of this Person cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Person.ToLongString">
            <returns>Content of this Person as a long string</returns>
        </member>
        <member name="M:Repository.Person.ToString">
            <returns>Content of Person as string</returns>
        </member>
        <member name="M:Repository.Person.Validate">
            <summary>Validates data in this Person</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.PostalAddress">
            <remarks/>
        </member>
        <member name="M:Repository.PostalAddress.#ctor">
            <summary>Initializes an empty instance of PostalAddress</summary>
        </member>
        <member name="M:Repository.PostalAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of PostalAddress</summary><param name="parentId" /><param name="institutionId" /><param name="standardAddressId" />
            <param name="postalCode" /><param name="districtName" /><param name="municipalityCode" /><param name="countryIdentificationCode" />
        </member>
        <member name="M:Repository.PostalAddress.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of PostalAddress from database</summary><param name="id" /><param name="parentId" /><param name="institutionId" /><param name="standardAddressId" />
            <param name="postalCode" /><param name="districtName" /><param name="mmunicipalityCode" /><param name="countryIdentificationCode" />
        </member>
        <member name="M:Repository.PostalAddress.#ctor(System.String[])">
            <summary>Initializes a new instance of PostalAddress from database</summary><param name="array" />
        </member>
        <member name="M:Repository.PostalAddress.#ctor(Repository.PostalAddress)">
            <summary>Initializes a new instance of PostalAddress, that accepts data from existing PostalAddress</summary><param name="addr" />
        </member>
        <member name="P:Repository.PostalAddress.Id">
            <remarks/>
        </member>
        <member name="P:Repository.PostalAddress.ParentIdentifier">
            <summary>Aka. PersonCivilRegistrationIdentifier or DepartmentIdentifier</summary>
        </member>
        <member name="P:Repository.PostalAddress.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.PostalAddress.StandardAddressIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.PostalAddress.PostalCode">
            <remarks/>
        </member>
        <member name="P:Repository.PostalAddress.DistrictName">
            <remarks/>
        </member>
        <member name="P:Repository.PostalAddress.MunicipalityCode">
            <remarks/>
        </member>
        <member name="P:Repository.PostalAddress.CountryIdentificationCode">
            <remarks/>
        </member>
        <member name="P:Repository.PostalAddress.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="P:Repository.PostalAddress.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.PostalAddress.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.PostalAddress.SqlDeleteQuery">
            <returns>Delete PostalAddress SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="P:Repository.PostalAddress.SqlInsertQuery">
            <returns>Insert PostalAddress SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="P:Repository.PostalAddress.SqlSelectQuery">
            <returns>Select PostalAddress SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="P:Repository.PostalAddress.SqlUpdateQuery">
            <returns>Update PostalAddress SQL-query as string</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:Repository.EmptyRefException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:Repository.PostalAddress.Equals(Repository.PostalAddress)">
            <summary>Determines whether this PostalAddress and <paramref name="addr"/> have the same value</summary><param name="addr" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.PostalAddress.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.PostalAddress.IsPersonPostalAddress">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.PostalAddress.IsUpdated">
            <summary>Check wether validation of this PostalAddress cause changes, that must be updated in database.</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.PostalAddress.ToLongString">
            <returns>Content of this PostalAddress as a long string</returns>
        </member>
        <member name="M:Repository.PostalAddress.ToString">
            <returns>Content of this PostalAddress as string</returns>
        </member>
        <member name="M:Repository.PostalAddress.Validate">
            <summary>Validates data in this PostalAddress</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.Profession">
            <remarks/>
        </member>
        <member name="F:Repository.Profession.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.Profession.#ctor">
            <summary>Initializes an empty instance of Profession</summary>
        </member>
        <member name="M:Repository.Profession.#ctor(System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Profession</summary><param name="activationDate" /><param name="deactivationDate" /><param name="jobPositionId" /><param name="jobPositionName" />
            <param name="jobPositionLevelCode" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Profession.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Profession from SDWS</summary><param name="activationDate" /><param name="deactivationDate" /><param name="jobPositionId" /><param name="jobPositionName" />
            <param name="jobPositionLevelCode" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Profession.#ctor(System.Int32,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Profession</summary><param name="id" /><param name="activationDate" /><param name="deactivationDate" /><param name="jobPositionId" /><param name="jobPositionName" />
            <param name="jobPositionLevelCode" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Profession.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Profession from SDWS</summary><param name="id" /><param name="activationDate" /><param name="deactivationDate" /><param name="jobPositionId" /><param name="jobPositionName" />
            <param name="jobPositionLevelCode" /><param name="institutionId" />
        </member>
        <member name="M:Repository.Profession.#ctor(Repository.Profession)">
            <summary>Initializes a new instance of Profession, that accepts data from existing Profession</summary><param name="prof">Profession</param>
        </member>
        <member name="M:Repository.Profession.#ctor(System.String[])">
            <summary>Initializes a new instance of Profession from existing database</summary><param name="array">Profession</param>
        </member>
        <member name="P:Repository.Profession.Id">
            <remarks/>
        </member>
        <member name="P:Repository.Profession.ActivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.Profession.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.Profession.JobPositionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.Profession.JobPositionName">
            <remarks/>
        </member>
        <member name="P:Repository.Profession.JobPositionLevelCode">
            <remarks/>
        </member>
        <member name="P:Repository.Profession.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.Profession.Active">
            <remarks />
        </member>
        <member name="P:Repository.Profession.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.Profession.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.Profession.SqlDeleteQuery">
            <summary>Delete Profession SQL-query</summary>
        </member>
        <member name="P:Repository.Profession.SqlInsertQuery">
            <summary>Insert Profession SQL-query </summary>
        </member>
        <member name="P:Repository.Profession.SqlSelectQuery">
            <summary>Select Profession SQL-query</summary>
        </member>
        <member name="P:Repository.Profession.SqlUpdateQuery">
            <summary>Update Profession SQL-query</summary>
        </member>
        <member name="M:Repository.Profession.Equals(Repository.Profession)">
            <summary>Compares this Profession to <paramref name="prof"/></summary><param name="prof" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.Profession.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Profession.IsUpdated">
            <summary> Check wether validation of this Profession cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.Profession.IsActive">
            <remarks/>
        </member>
        <member name="M:Repository.Profession.ToLongString">
            <returns>Content of this Profession as a long string</returns>
        </member>
        <member name="M:Repository.Profession.ToString">
            <returns>Content of this Profession as string</returns>
        </member>
        <member name="M:Repository.Profession.Validate">
            <summary>Validates data in this <see cref="T:Repository.Profession"/></summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Repository.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Repository.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Repository.Resources.ConnectionString">
            <summary>
              Looks up a localized string similar to Data Source=udcsql2012;Initial Catalog=SD_Test;User ID=sd;Password=kfe73fmf3F9f21dC;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False;MultipleActiveResultSets=True.
            </summary>
        </member>
        <member name="P:Repository.Resources.CsvPath">
            <summary>
              Looks up a localized string similar to C:\CSV\.
            </summary>
        </member>
        <member name="P:Repository.Resources.DataSetsPath">
            <summary>
              Looks up a localized string similar to C:\Datasets\.
            </summary>
        </member>
        <member name="P:Repository.Resources.ErrorPath">
            <summary>
              Looks up a localized string similar to C:\Errors\.
            </summary>
        </member>
        <member name="P:Repository.Resources.FutureDate">
            <summary>
              Looks up a localized string similar to 9999-12-31.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetDepartmentAction">
            <summary>
              Looks up a localized string similar to GetDepartment20111201.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetEmploymentAction">
            <summary>
              Looks up a localized string similar to GetEmployment20111201.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetEmploymentChangedAction">
            <summary>
              Looks up a localized string similar to GetEmploymentChanged20111201.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetEmploymentChangedAtDateAction">
            <summary>
              Looks up a localized string similar to GetEmploymentChangedAtDate20111201.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetInstitutionAction">
            <summary>
              Looks up a localized string similar to GetInstitution20111201.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetOrganizationAction">
            <summary>
              Looks up a localized string similar to GetOrganization20111201.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetPersonAction">
            <summary>
              Looks up a localized string similar to GetPerson20111201.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetPersonChangedAtDateAction">
            <summary>
              Looks up a localized string similar to GetPersonChangedAtDate20111201.
            </summary>
        </member>
        <member name="P:Repository.Resources.GetProfessionAction">
            <summary>
              Looks up a localized string similar to GetProfession20080201.
            </summary>
        </member>
        <member name="P:Repository.Resources.LogsPath">
            <summary>
              Looks up a localized string similar to C:\Logs\.
            </summary>
        </member>
        <member name="P:Repository.Resources.OldDate">
            <summary>
              Looks up a localized string similar to 2010-01-01.
            </summary>
        </member>
        <member name="P:Repository.Resources.ResourcesPath">
            <summary>
              Looks up a localized string similar to C:\Resources\.
            </summary>
        </member>
        <member name="P:Repository.Resources.SDWSPassword">
            <summary>
              Looks up a localized string similar to up4ne43u.
            </summary>
        </member>
        <member name="P:Repository.Resources.SDWSUsername">
            <summary>
              Looks up a localized string similar to sysyshb01.
            </summary>
        </member>
        <member name="P:Repository.Resources.WebServiceCachePath">
            <summary>
              Looks up a localized string similar to WSCache.
            </summary>
        </member>
        <member name="P:Repository.Resources.WebServiceUri">
            <summary>
              Looks up a localized string similar to https://service.sd.dk/sdws/.
            </summary>
        </member>
        <member name="T:Repository.SalaryAgreement">
            <remarks />
        </member>
        <member name="F:Repository.SalaryAgreement.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.SalaryAgreement.#ctor">
            <summary>Initializes an empty instance of SalaryAgreement</summary>
        </member>
        <member name="M:Repository.SalaryAgreement.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Boolean,System.DateTime)">
            <summary>Initializes a new instance of SalaryAgreement</summary><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" />
            <param name="salaryAgreementId" /><param name="salaryClassId" /><param name="salaryScaleId" /><param name="prepaidIndicator" /><param name="seniorityDate" />
        </member>
        <member name="M:Repository.SalaryAgreement.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of SalaryAgreement from SDWS</summary><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" />
            <param name="salaryAgreementId" /><param name="salaryClassId" /><param name="salaryScaleId" /><param name="prepaidIndicator" /><param name="seniorityDate" />
        </member>
        <member name="M:Repository.SalaryAgreement.#ctor(System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>Initializes a new instance of SalaryAgreement from database</summary><param name="id" /><param name="employmentId" /><param name="institutionId" /><param name="activationDate" />
            <param name="deactivationDate" /><param name="salaryAgreementId" /><param name="salaryClassId" /><param name="salaryScaleId" /><param name="prepaidIndicator" /><param name="seniorityDate" />
        </member>
        <member name="M:Repository.SalaryAgreement.#ctor(Repository.SalaryAgreement)">
            <summary>Initializes a new instance of SalaryAgreement, that accepts data from an existing SalaryAgreement</summary><param name="agree" />
        </member>
        <member name="M:Repository.SalaryAgreement.#ctor(System.String[])">
            <summary>Initializes a new instance of SalaryAgreement from database</summary><param name="array" />
        </member>
        <member name="P:Repository.SalaryAgreement.Id">
            <remarks />
        </member>
        <member name="P:Repository.SalaryAgreement.EmploymentIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.SalaryAgreement.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.SalaryAgreement.ActivationDate">
            <remarks />
        </member>
        <member name="P:Repository.SalaryAgreement.DeactivationDate">
            <remarks />
        </member>
        <member name="P:Repository.SalaryAgreement.SalaryAgreementIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.SalaryAgreement.SalaryClassIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.SalaryAgreement.SalaryScaleIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.SalaryAgreement.PrepaidIndicator">
            <remarks />
        </member>
        <member name="P:Repository.SalaryAgreement.SeniorityDate">
            <remarks />
        </member>
        <member name="P:Repository.SalaryAgreement.Active">
            <remarks/>
        </member>
        <member name="P:Repository.SalaryAgreement.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.SalaryAgreement.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.SalaryAgreement.SqlDeleteQuery">
            <summary>DELETE FROM [dbo].[SalaryAgreementList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.SalaryAgreement.SqlInsertQuery">
            <summary>INSERT INTO [dbo].[SalaryAgreementList]([EmploymentIdentifier],[InstitutionIdentifier],[SalaryAgreementIdentifier],[ActivationDate],[DeactivationDate],[SalaryClassIdentifier],[SalaryScaleIdentifier],
            [PrepaidIndicator],[SeniorityDate],) VALUES('EmploymentIdentifier','InstitutionIdentifier','SalaryAgreementIdentifier','ActivationDate','DeactivationDate','SalaryClassIdentifier','SalaryScaleIdentifier',
            'PrepaidIndicator','SeniorityDate')</summary>
        </member>
        <member name="P:Repository.SalaryAgreement.SqlSelectQuery">
            <summary>SELECT * FROM [dbo].[SalaryAgreementList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.SalaryAgreement.SqlUpdateQuery">
            <summary>UPDATE[dbo].[SalaryAgreementList] SET [EmploymentIdentifier]='EmploymentIdentifier',[InstitutionIdentifier]='InstitutionIdentifier',[ActivationDate]='ActivationDate',[DeactivationDate]='DeactivationDate',
            [SalaryAgreementIdentifier]='SalaryAgreementIdentifier',[SalaryClassIdentifier]='SalaryClassIdentifier',[SalaryScaleIdentifier]='this.SalaryScaleIdentifier',[PrepaidIndicator]='PrepaidIndicator',
            [SeniorityDate]='SeniorityDate' WHERE [Id]=Id</summary>
        </member>
        <member name="M:Repository.SalaryAgreement.Equals(Repository.SalaryAgreement)">
            <summary>Compares this Department to <paramref name="agree"/></summary><param name="agree" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.SalaryAgreement.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.SalaryAgreement.IsUpdated">
            <summary>Checks wether validation of this SalaryAgreement cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.SalaryAgreement.IsActive">
            <remarks/>
        </member>
        <member name="M:Repository.SalaryAgreement.ToLongString">
            <returns>Content of SalaryAgreement as a long string</returns>
        </member>
        <member name="M:Repository.SalaryAgreement.ToString">
            <returns>Content of SalaryAgreement as string</returns>
        </member>
        <member name="M:Repository.SalaryAgreement.Validate">
            <summary>Validates data in this SalaryAgreement</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.SalaryCodeGroup">
            <remarks />
        </member>
        <member name="F:Repository.SalaryCodeGroup.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.SalaryCodeGroup.#ctor">
            <summary>Initializes an empty instance of SalaryCodeGroup</summary>
        </member>
        <member name="M:Repository.SalaryCodeGroup.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>Initializes a new instance of SalaryCodeGroup</summary><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" /><param name="pensionCode" />
        </member>
        <member name="M:Repository.SalaryCodeGroup.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of SalaryCodeGroup from SDWS</summary><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" /><param name="pensionCode" />
        </member>
        <member name="M:Repository.SalaryCodeGroup.#ctor(System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>Initializes a new instance of SalaryCodeGroup from database</summary><param name="id" /><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" /><param name="pensionCode" />
        </member>
        <member name="M:Repository.SalaryCodeGroup.#ctor(System.String[])">
            <summary>Initializes a new instance of SalaryCodeGroup from database</summary><param name="array" /><exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:Repository.SalaryCodeGroup.#ctor(Repository.SalaryCodeGroup)">
            <summary>Initializes a new instance of SalaryCodeGroup from database, that accepts data from existing SalaryCodeGroup</summary><param name="group" /><exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="P:Repository.SalaryCodeGroup.Id">
            <remarks />
        </member>
        <member name="P:Repository.SalaryCodeGroup.EmploymentIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.SalaryCodeGroup.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.SalaryCodeGroup.ActivationDate">
            <remarks />
        </member>
        <member name="P:Repository.SalaryCodeGroup.DeactivationDate">
            <remarks />
        </member>
        <member name="P:Repository.SalaryCodeGroup.PensionCode">
            <remarks />
        </member>
        <member name="P:Repository.SalaryCodeGroup.Active">
            <remarks/>
        </member>
        <member name="P:Repository.SalaryCodeGroup.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.SalaryCodeGroup.SqlDeleteQuery">
            <summary>DELETE FROM [dbo].[SalaryCodeGroupList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.SalaryCodeGroup.SqlInsertQuery">
            <summary>INSERT INTO [dbo].[SalaryCodeGroupList]([EmploymentIdentifier],[InstitutionIdentifier][ActivationDate],[DeactivationDate],[PensionCode]) VALUES('EmploymentIdentifier','InstitutionIdentifier','ActivationDate',
            'DeactivationDate','PensionCode')</summary>
        </member>
        <member name="P:Repository.SalaryCodeGroup.SqlSelectQuery">
            <summary>SELECT * FROM [dbo].[SalaryCodeGroupList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.SalaryCodeGroup.SqlUpdateQuery">
            <summary>UPDATE[dbo].[SalaryCodeGroupList] SET [EmploymentIdentifier]='EmploymentIdentifier',[InstitutionIdentifier]='InstitutionIdentifier',[ActivationDate]='ActivationDate',[DeactivationDate]='DeactivationDate',
            [PensionCode]='PensionCode' WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.SalaryCodeGroup.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="M:Repository.SalaryCodeGroup.Equals(Repository.SalaryCodeGroup)">
            <summary>Compares this SalaryCodeGroup to <paramref name="group"/></summary><param name="group" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.SalaryCodeGroup.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.SalaryCodeGroup.IsUpdated">
            <summary>Check wether validation of this SalaryCodeGroup cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.SalaryCodeGroup.IsActive">
            <remarks/>
        </member>
        <member name="M:Repository.SalaryCodeGroup.ToString">
            <returns>Content of SalaryCodeGroup as string</returns>
        </member>
        <member name="M:Repository.SalaryCodeGroup.Validate">
            <summary>Validates data in this SalaryCodeGroup</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.SuccessfulRun">
            <remarks />
        </member>
        <member name="M:Repository.SuccessfulRun.#ctor">
            <summary>Initializes an empty instance of SuccessfulRun</summary>
        </member>
        <member name="M:Repository.SuccessfulRun.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of SuccessfulRun</summary><param name="runDate" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:Repository.SuccessfulRun.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>Initializes a new instance of SuccessfulRun from database</summary><param name="id" /><param name="runDate" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:Repository.SuccessfulRun.#ctor(System.String[])">
            <summary>Initializes a new instance of SuccessfulRun from database</summary><param name="array" />
        </member>
        <member name="M:Repository.SuccessfulRun.#ctor(Repository.SuccessfulRun)">
            <summary>Initializes a new instance of SuccessfulRun, that accepts data from existing SuccessfulRun</summary><param name="run" />
        </member>
        <member name="P:Repository.SuccessfulRun.Id">
            <remarks />
        </member>
        <member name="P:Repository.SuccessfulRun.RunDate">
            <remarks />
        </member>
        <member name="P:Repository.SuccessfulRun.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.SuccessfulRun.SdApi">
            <remarks />
        </member>
        <member name="P:Repository.SuccessfulRun.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="P:Repository.SuccessfulRun.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.SuccessfulRun.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="P:Repository.SuccessfulRun.SqlDeleteQuery">
            <summary>Delete SuccessfulRun SQL-query</summary>
        </member>
        <member name="P:Repository.SuccessfulRun.SqlInsertQuery">
            <summary>Insert SuccessfulRun SQL-query</summary>
        </member>
        <member name="P:Repository.SuccessfulRun.SqlSelectQuery">
            <summary>Select SuccessfulRun SQL-query</summary>
        </member>
        <member name="P:Repository.SuccessfulRun.SqlUpdateQuery">
            <summary>Update SuccessfulRun SQL-query</summary>
        </member>
        <member name="M:Repository.SuccessfulRun.Equals(Repository.SuccessfulRun)">
            <summary>Compares this SuccessfulRun to <paramref name="run"/></summary><param name="run">SuccessfulRun</param><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.SuccessfulRun.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.SuccessfulRun.ToString">
            <returns>Content of SuccessfulRun as a string</returns>
        </member>
        <member name="T:Repository.View3in1PermanentEmployment">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Id">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Cpr">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Fornavn">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Efternavn">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Silo">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.AfdelingsUuid">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Afdelingsniveau">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Phone1">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Phone2">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Email1">
            <remarks />
        </member>
        <member name="P:Repository.View3in1PermanentEmployment.Email2">
            <remarks />
        </member>
        <member name="T:Repository.ViewActiveEmployment">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.EmploymentId">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.PersonCivilRegistrationIdentifierNvarchar">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.PersonCivilRegistrationIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.PersonGivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.PersonSurnameName">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.EmploymentStatusCode">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.OccupationRate">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.SalaryRate">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.WorkingTime">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.Hoursw">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.JobPositionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.DepartmentName">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.ActivationDate">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.DeactivationDate">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.JobPositionName">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.EmploymentName">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.AnniversaryDate">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveEmployment.DepartmentIdentifier">
            <remarks />
        </member>
        <member name="T:Repository.ViewActiveWithoutMail">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveWithoutMail.Tjenestenr">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveWithoutMail.Cpr">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveWithoutMail.Fornavn">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveWithoutMail.Efternavn">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveWithoutMail.Mail1">
            <remarks />
        </member>
        <member name="P:Repository.ViewActiveWithoutMail.Mail2">
            <remarks />
        </member>
        <member name="T:Repository.ViewEmploymentToday">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.Id">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.Institution">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.Cpr">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.EmploymentId">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.JobPositionName">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.EmploymentName">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.SurName">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.Department">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.DepartmentUuid">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.Phone1">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.Phone2">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewEmploymentToday.Email2">
            <remarks />
        </member>
        <member name="T:Repository.ViewMoch">
            <remarks />
        </member>
        <member name="P:Repository.ViewMoch.EmploymentUniqueIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMoch.Institution">
            <remarks />
        </member>
        <member name="P:Repository.ViewMoch.PersonCivilRegistrationIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMoch.PersonGivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewMoch.PersonSurnameName">
            <remarks />
        </member>
        <member name="P:Repository.ViewMoch.EmailAddressIdentifier1">
            <remarks />
        </member>
        <member name="P:Repository.ViewMoch.EmailAddressIdentifier2">
            <remarks />
        </member>
        <member name="T:Repository.ViewMochPerson">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPerson.EmploymentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPerson.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPerson.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPerson.Surname">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPerson.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPerson.Email2">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPerson.DepartmentName">
            <remarks />
        </member>
        <member name="T:Repository.ViewMochPersonHB">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHB.EmploymentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHB.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHB.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHB.Surname">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHB.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHB.Email2">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHB.DepartmentName">
            <remarks />
        </member>
        <member name="T:Repository.ViewMochPersonHI">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHI.EmploymentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHI.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHI.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHI.Surname">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHI.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHI.Email2">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHI.DepartmentName">
            <remarks />
        </member>
        <member name="T:Repository.ViewMochPersonHW">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHW.EmploymentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHW.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHW.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHW.Surname">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHW.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHW.Email2">
            <remarks />
        </member>
        <member name="P:Repository.ViewMochPersonHW.DepartmentName">
            <remarks />
        </member>
        <member name="T:Repository.ViewOccupationRate">
            <remarks />
        </member>
        <member name="P:Repository.ViewOccupationRate.Rate">
            <remarks />
        </member>
        <member name="P:Repository.ViewOccupationRate.Cpr">
            <remarks />
        </member>
        <member name="T:Repository.ViewPermanentEmployment">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.Id">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.Institution">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.Cpr">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.EmploymentId">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.JobPositionName">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.EmploymentName">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.SurName">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.Department">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.DepartmentUuid">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.Phone1">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.Phone2">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmployment.Email2">
            <remarks />
        </member>
        <member name="T:Repository.ViewPermanentEmploymentSalaried">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.Id">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.Institution">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.Cpr">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.EmploymentId">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.JobPositionName">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.EmploymentName">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.SurName">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.Department">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.DepartmentUuid">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.Phone1">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.Phone2">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewPermanentEmploymentSalaried.Email2">
            <remarks />
        </member>
        <member name="T:Repository.ViewSelectDepartment">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.DepartmentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.DepartmentReferencesId">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.Parent">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.ProductionUnitIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.DepartmentName">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.Telefon">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.Fax">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.Email2">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.Postnr">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.By">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectDepartment.Adresse">
            <remarks />
        </member>
        <member name="T:Repository.ViewSelectEmployeeWorkplace">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectEmployeeWorkplace.EmploymentId">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectEmployeeWorkplace.DepartmentIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectEmployeeWorkplace.DepartmentName">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectEmployeeWorkplace.ProductionUnitIdentifier">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectEmployeeWorkplace.Adresse">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectEmployeeWorkplace.Postnr">
            <remarks />
        </member>
        <member name="P:Repository.ViewSelectEmployeeWorkplace.By">
            <remarks />
        </member>
        <member name="T:Repository.ViewXmEmployment">
            <remarks />
        </member>
        <member name="P:Repository.ViewXmEmployment.EmploymentId">
            <remarks />
        </member>
        <member name="P:Repository.ViewXmEmployment.Cpr">
            <remarks />
        </member>
        <member name="P:Repository.ViewXmEmployment.GivenName">
            <remarks />
        </member>
        <member name="P:Repository.ViewXmEmployment.Surname">
            <remarks />
        </member>
        <member name="P:Repository.ViewXmEmployment.Silo">
            <remarks />
        </member>
        <member name="P:Repository.ViewXmEmployment.DeactivationDate">
            <remarks />
        </member>
        <member name="P:Repository.ViewXmEmployment.Email1">
            <remarks />
        </member>
        <member name="P:Repository.ViewXmEmployment.Email2">
            <remarks />
        </member>
        <member name="T:Repository.WorkingTime">
            <remarks />
        </member>
        <member name="F:Repository.WorkingTime.CsvHeader">
            <summary>Header for CSV-file</summary>
        </member>
        <member name="M:Repository.WorkingTime.#ctor">
            <summary>Initializes an empty instance of WorkingTime</summary>
        </member>
        <member name="M:Repository.WorkingTime.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of WorkingTime</summary><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" />
            <param name="occupationRate" /><param name="salaryRate" /><param name="salariedIndicator" /><param name="automaticRaiseIndicator" /><param name="fullTimeIndicator" />
        </member>
        <member name="M:Repository.WorkingTime.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of WorkingTime from SDWS</summary><param name="employmentId" /><param name="institutionId" /><param name="activationDate" /><param name="deactivationDate" />
            <param name="occupationRate" /><param name="salaryRate" /><param name="salariedIndicator" /><param name="automaticRaiseIndicator" /><param name="fullTimeIndicator" />
        </member>
        <member name="M:Repository.WorkingTime.#ctor(System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of WorkingTime from database</summary><param name="id">int</param><param name="employmentId" /><param name="institutionId" /><param name="activationDate" />
            <param name="deactivationDate" /><param name="occupationRate" /><param name="salaryRate" /><param name="salariedIndicator" /><param name="automaticRaiseIndicator" /><param name="fullTimeIndicator" />
        </member>
        <member name="M:Repository.WorkingTime.#ctor(System.String[])">
            <summary>Initializes a new instance of WorkingTime from database</summary><param name="array" />
        </member>
        <member name="M:Repository.WorkingTime.#ctor(Repository.WorkingTime)">
            <summary>Initializes a new instance of WorkingTime,that accepts data from existing WorkingTime</summary><param name="time" />
        </member>
        <member name="P:Repository.WorkingTime.Id">
            <remarks />
        </member>
        <member name="P:Repository.WorkingTime.EmploymentIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.WorkingTime.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:Repository.WorkingTime.ActivationDate">
            <remarks />
        </member>
        <member name="P:Repository.WorkingTime.DeactivationDate">
            <remarks />
        </member>
        <member name="P:Repository.WorkingTime.OccupationRate">
            <remarks />
        </member>
        <member name="P:Repository.WorkingTime.SalaryRate">
            <remarks />
        </member>
        <member name="P:Repository.WorkingTime.SalariedIndicator">
            <remarks />
        </member>
        <member name="P:Repository.WorkingTime.AutomaticRaiseIndicator">
            <remarks />
        </member>
        <member name="P:Repository.WorkingTime.FullTimeIndicator">
            <remarks />
        </member>
        <member name="P:Repository.WorkingTime.Active">
            <remarks/>
        </member>
        <member name="P:Repository.WorkingTime.CsvValue">
            <summary>Value for CSV-file</summary>
        </member>
        <member name="P:Repository.WorkingTime.SqlDeleteQuery">
            <summary>DELETE FROM [dbo].[WorkingTimeList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.WorkingTime.SqlInsertQuery">
            <summary>INSERT INTO [dbo].[WorkingTimeList]([EmploymentIdentifier],[InstitutionIdentifier][ActivationDate],[DeactivationDate],[OccupationRate],[SalaryRate],[SalariedIndicator],[AutomaticRaiseIndicator],
            [FullTimeIndicator]) VALUES('EmploymentIdentifier','InstitutionIdentifier','ActivationDate','DeactivationDate','OccupationRate','SalaryRate','SalariedIndicator','AutomaticRaiseIndicator',
            'FullTimeIndicator')</summary>
        </member>
        <member name="P:Repository.WorkingTime.SqlSelectQuery">
            <summary>SELECT * FROM [dbo].[WorkingTimeList] WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.WorkingTime.SqlUpdateQuery">
            <summary>UPDATE [dbo].[WorkingTimeList] SET [EmploymentIdentifier]='EmploymentIdentifier+"[InstitutionIdentifier]='InstitutionIdentifier+"[ActivationDate]='ActivationDate',[DeactivationDate]='DeactivationDate',
            [OccupationRate]='OccupationRate',[SalaryRate]='SalaryRate',[SalariedIndicator]='this.SalariedIndicator',[AutomaticRaiseIndicator]='AutomaticRaiseIndicator',[FullTimeIndicator]='FullTimeIndicator' WHERE [Id]=Id</summary>
        </member>
        <member name="P:Repository.WorkingTime.TKey">
            <summary>Tkey for Dictionary</summary>
        </member>
        <member name="M:Repository.WorkingTime.Equals(Repository.WorkingTime)">
            <summary>Compares this WorkingTime to <paramref name="time"/></summary><param name="time" /><returns>Result as bool</returns>
        </member>
        <member name="M:Repository.WorkingTime.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.WorkingTime.IsUpdated">
            <summary>Checks wether validation of this <see cref="T:Repository.WorkingTime"/> cause changes, that must be updated in database</summary><returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.WorkingTime.IsActive">
            <remarks/>
        </member>
        <member name="M:Repository.WorkingTime.ToLongString">
            <returns>Content of this WorkingTime as a long string</returns>
        </member>
        <member name="M:Repository.WorkingTime.ToString">
            <returns>Content of this WorkingTime as string</returns>
        </member>
        <member name="M:Repository.WorkingTime.Validate">
            <summary>Validates data in this WorkingTime</summary><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:Repository.XmEmployment">
            <remarks/>
        </member>
        <member name="F:Repository.XmEmployment.CsvHeader">
            <remarks/>
        </member>
        <member name="M:Repository.XmEmployment.#ctor">
            <summary>Initializes an empty instance of XmEmployment</summary>
        </member>
        <member name="M:Repository.XmEmployment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of XmEmployment</summary><param name="emplId">employmentId</param><param name="cpr" /><param name="givenName">givenName</param><param name="surName">surName</param><param name="silo" />
            <param name="deactDate">deactivationDate</param><param name="email1" /><param name="email2" />
        </member>
        <member name="M:Repository.XmEmployment.#ctor(System.String[])">
            <summary>Initializes a new instance of XmEmployment</summary><param name="resultArray" /><exception cref="T:System.ArgumentOutOfRangeException" />
        </member>
        <member name="P:Repository.XmEmployment.EmploymentId">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.Cpr">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.GivenName">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.SurName">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.Silo">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.Email1">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.Email2">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.TKey">
            <remarks/>
        </member>
        <member name="P:Repository.XmEmployment.CsvValue">
            <remarks/>
        </member>
        <member name="M:Repository.XmEmployment.IsEmpty">
            <returns>Result as bool</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:Repository.XmEmployment.ToString">
            <returns>Content of XmEmployment as string</returns>
        </member>
        <member name="T:ApiRepository.Api3in1Organization">
            <remarks/>
        </member>
        <member name="M:ApiRepository.Api3in1Organization.#ctor">
            <summary>Initializes an empty instance of <see cref="T:ApiRepository.Api3in1Organization"/></summary>
        </member>
        <member name="M:ApiRepository.Api3in1Organization.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Api3in1Organization</summary><param name="institution" /><param name="organization" /><param name="activationDate" /><param name="deactivationDate" />
            <param name="basicDepartmentLevelId" /><param name="basicDepartmentUuid" /><param name="level1DepartmentLevelId" /><param name="level1DepartmentUuid" /><param name="level2DepartmentLevelId" />
            <param name="level2DepartmentUuid" /><param name="level3DepartmentLevelId" /><param name="level3DepartmentUuid"></param><param name="level4DepartmentLevelId" /><param name="level4DepartmentUuid" />
            <param name="level5DepartmentLevel" /><param name="level5DepartmentUuid" />
        </member>
        <member name="M:ApiRepository.Api3in1Organization.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of Api3in1Organization from Database</summary><param name="id" /><param name="institution" /><param name="organization" /><param name="activationDate" />
            <param name="deactivationDate" /><param name="basicDepartmentLevelId" /><param name="basicDepartmentUuid" /><param name="level1DepartmentLevelId" /><param name="level1DepartmentUuid" />
            <param name="level2DepartmentLevelId" /><param name="level2DepartmentUuid" /><param name="level3DepartmentLevelId" /><param name="level3DepartmentUuid" /><param name="level4DepartmentLevelId" />
            <param name="level4DepartmentUuid" /><param name="level5DepartmentLevel" /><param name="level5DepartmentUuid" />
        </member>
        <member name="M:ApiRepository.Api3in1Organization.#ctor(ApiRepository.Api3in1Organization)">
            <summary>Initializes an instance of Api3in1Organization, that accepts data from an existing Api3in1Organization</summary><param name="org" />
        </member>
        <member name="M:ApiRepository.Api3in1Organization.#ctor(System.String[])">
            <summary>Initializes an instance of Api3in1Organization, that accepts data from a string array</summary><param name="array" />
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Organization">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.ActivationDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.BasicDepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.BasicDepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level1DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level1DepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level2DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level2DepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level3DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level3DepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level4DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level4DepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level5DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.Level5DepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Organization.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.Api3in1Organization.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.Api3in1OrganizationStructure">
            <remarks/>
        </member>
        <member name="M:ApiRepository.Api3in1OrganizationStructure.#ctor">
            <summary>Initializes an empty instance of Api3in1OrganizationStructure</summary>
        </member>
        <member name="M:ApiRepository.Api3in1OrganizationStructure.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Api3in1OrganizationStructure</summary><param name="inst">Institution</param><param name="structureId">OrganizationStructure</param><param name="basDepLevId">BasicDepartmentLevelIdentifier</param><param name="lev1DepLevId">Level1DepartmentLevelIdentifier</param>
            <param name="lev2DepLevId">Level2DepartmentLevelIdentifier</param><param name="lev3DepLevId">Level3DepartmentLevelIdentifier</param><param name="lev4DepLevId">Level4DepartmentLevelIdentifier</param><param name="lev5DepLevId">Level5DepartmentLevelIdentifier</param>
        </member>
        <member name="M:ApiRepository.Api3in1OrganizationStructure.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of Api3in1OrganizationStructure from Database</summary><param name="id" /><param name="inst">Institution</param><param name="structureId">OrganizationStructure</param><param name="basDepLevId">BasicDepartmentLevelIdentifier</param><param name="lev1DepLevId">Level1DepartmentLevelIdentifier</param>
            <param name="lev2DepLevId">Level2DepartmentLevelIdentifier</param><param name="lev3DepLevId">Level3DepartmentLevelIdentifier</param><param name="lev4DepLevId">Level4DepartmentLevelIdentifier</param><param name="lev5DepLevId">Level5DepartmentLevelIdentifier</param>
        </member>
        <member name="M:ApiRepository.Api3in1OrganizationStructure.#ctor(ApiRepository.Api3in1OrganizationStructure)">
            <summary>Initializes an instance of Api3in1OrganizationStructure, that accepts data from an existing Api3in1OrganizationStructure</summary><param name="structure" />
        </member>
        <member name="M:ApiRepository.Api3in1OrganizationStructure.#ctor(System.String[])">
            <summary>Initializes an instance of Api3in1OrganizationStructure, that accepts data from a string array</summary><param name="array" />
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.OrganizationStructure">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.BasicDepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.Level1DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.Level2DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.Level3DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.Level4DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.Level5DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1OrganizationStructure.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.Api3in1OrganizationStructure.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.Api3in1Person">
            <remarks/>
        </member>
        <member name="M:ApiRepository.Api3in1Person.#ctor">
            <summary>Initializes an empty instance of Api3in1Person</summary>
        </member>
        <member name="M:ApiRepository.Api3in1Person.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Api3in1Person</summary><param name="ins">Institution</param><param name="cpr" /><param name="empId">EmploymentId</param><param name="givenName" /><param name="surName" />
            <param name="dept">Department</param><param name="depUuid">DepartmentUuId</param><param name="phone1" /><param name="phone2" /><param name="email1" /><param name="email2" />
        </member>
        <member name="M:ApiRepository.Api3in1Person.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of Api3in1Person from Database</summary><param name="id" /><param name="ins">Institution</param><param name="cpr" /><param name="empId">EmploymentId</param><param name="givenName" />
            <param name="surName" /><param name="dept">Department</param><param name="depUuid">DepartmentUuId</param><param name="phone1" /><param name="phone2" /><param name="email1" /><param name="email2" />
        </member>
        <member name="M:ApiRepository.Api3in1Person.#ctor(ApiRepository.Api3in1Person)">
            <summary>Initializes an instance of Api3in1Person, that accepts data from existing Api3in1Person</summary><param name="pers" />
        </member>
        <member name="M:ApiRepository.Api3in1Person.#ctor(System.String[])">
            <summary>Initializes an instance of Api3in1Person, that accepts data from a string array</summary><param name="array" />
        </member>
        <member name="P:ApiRepository.Api3in1Person.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.Cpr">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.EmploymentId">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.GivenName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.SurName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.Department">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.DepartmentUuId">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.Phone1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.Phone2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.Email1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.Email2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.Api3in1Person.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.Api3in1Person.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.ApiGetDepartment">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetDepartment.#ctor">
            <summary>Initializes an empty instance of ApiGetDepartment</summary>
        </member>
        <member name="M:ApiRepository.ApiGetDepartment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ApiGetDepartment</summary><param name="actDate">ActivationDate</param><param name="deactDate">DeactivationDate</param><param name="ins">Institution</param><param name="depUuid">DepartmentUuidIdentifier</param>
            <param name="depId">DepartmentIdentifier</param><param name="depLevId">DepartmentLevelIdentifier</param><param name="depName">DepartmentName</param><param name="prodUnitId">ProductionUnitIdentifier</param><param name="road">Road</param><param name="zip">Zip</param>
            <param name="town">Town</param><param name="muni">Municipality</param><param name="country">Country</param><param name="phone1">Phone1</param><param name="phone2">Phone2</param><param name="email1">Email1</param><param name="email2">email2</param>
        </member>
        <member name="M:ApiRepository.ApiGetDepartment.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of ApiGetDepartment from Database</summary><param name="id" /><param name="actDate">ActivationDate</param><param name="deactDate">DeactivationDate</param><param name="ins">Institution</param><param name="depUuid">DepartmentUuidIdentifier</param>
            <param name="depId">DepartmentIdentifier</param><param name="depLevId">DepartmentLevelIdentifier</param><param name="depName">DepartmentName</param><param name="prodUnitId">ProductionUnitIdentifier</param><param name="road">Road</param><param name="zip">Zip</param>
            <param name="town">Town</param><param name="muni">Municipality</param><param name="country">Country</param><param name="phone1">Phone1</param><param name="phone2">Phone2</param><param name="email1">Email1</param><param name="email2">email2</param>
        </member>
        <member name="M:ApiRepository.ApiGetDepartment.#ctor(ApiRepository.ApiGetDepartment)">
            <summary>Initializes an instance of ApiGetDepartment, that accepts data from existing ApiGetDepartment</summary><param name="dept" />
        </member>
        <member name="M:ApiRepository.ApiGetDepartment.#ctor(System.String[])">
            <summary>Initializes an instance of ApiGetDepartment, that accepts data from a string array</summary><param name="resultArray" />
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.ActivationDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.DepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.DepartmentIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.DepartmentName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.ProductionUnitIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Road">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Zip">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Town">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Municipality">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Country">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Phone1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Phone2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Email1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.Email2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetDepartment.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetDepartment.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.ApiGetEmployment">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetEmployment.#ctor">
            <summary>Initializes an empty instance of ApiGetEmployment</summary>
        </member>
        <member name="M:ApiRepository.ApiGetEmployment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ApiGetEmployment</summary><param name="inst">Institution</param><param name="emplId">EmploymentIdentifier</param><param name="emplDate">EmploymentDate</param><param name="annivDate">AnniversaryDate</param>
            <param name="emplDep">EmploymentDepartment</param><param name="prof">Profession</param><param name="status">EmploymentStatus</param><param name="agreement">SalaryAgreement</param><param name="codeGroup">SalaryCodeGroup</param><param name="time">WorkingTime</param>
        </member>
        <member name="M:ApiRepository.ApiGetEmployment.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of ApiGetEmployment from Database</summary><param name="id" /><param name="inst">Institution</param><param name="emplId">EmploymentIdentifier</param><param name="emplDate">EmploymentDate</param><param name="annivDate">AnniversaryDate</param>
            <param name="emplDep">EmploymentDepartment</param><param name="prof">Profession</param><param name="status">EmploymentStatus</param><param name="agreement">SalaryAgreement</param><param name="codeGroup">SalaryCodeGroup</param><param name="time">WorkingTime</param>
        </member>
        <member name="M:ApiRepository.ApiGetEmployment.#ctor(ApiRepository.ApiGetEmployment)">
            <summary>Initializes an instance of ApiGetEmployment, that accepts data from an existing ApiGetEmployment</summary><param name="empl" />
        </member>
        <member name="M:ApiRepository.ApiGetEmployment.#ctor(System.String[])">
            <summary>Initializes an instance of <see cref="T:ApiRepository.ApiGetEmployment"/>, that accepts data from <paramref name="array"/></summary><param name="array" />
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.EmploymentIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.EmploymentDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.AnniversaryDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.EmploymentDepartment">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.Profession">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.EmploymentStatus">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.SalaryAgreement">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.SalaryCodeGroup">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.WorkingTime">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetEmployment.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetEmployment.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.ApiGetInstitution">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetInstitution.#ctor">
            <summary>Initializes an empty instance of ApiGetInstitution</summary>
        </member>
        <member name="M:ApiRepository.ApiGetInstitution.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ApiGetInstitution</summary><param name="instUuid">InstitutionUuid</param><param name="instId">InstitutionIdentifier</param><param name="instName">InstitutionName</param><param name="admInstId">AdministrationInstitutionIdentifier</param>
            <param name="admInstUuid">AdministrationInstitutionUuid</param><param name="servInstId">ServiceInstitutionIdentifier</param><param name="servInstUuid">ServiceInstitutionUuid</param><param name="prodUnitIt">ProductionUnitIdentifier</param>
            <param name="road" /><param name="zip" /><param name="town" /><param name="muni">Municipality</param><param name="country" /><param name="phone1" /><param name="phone2" /><param name="email1" /><param name="email2" />
        </member>
        <member name="M:ApiRepository.ApiGetInstitution.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of ApiGetInstitution from Database</summary><param name="id" /><param name="instUuid">InstitutionUuid</param><param name="instId">institutionIdentifier</param><param name="instName">InstitutionName</param>
            <param name="admInstId">AdministrationInstitutionIdentifier</param><param name="admInstUuid">AdministrationInstitutionUuid</param><param name="servInstId">ServiceInstitutionIdentifier</param><param name="servInstUuid">ServiceInstitutionUuid</param>
            <param name="prodUnitIt">ProductionUnitIdentifier</param>ApiGetInstitution<param name="road" /><param name="zip" /><param name="town" /><param name="muni">Municipality</param><param name="country"/><param name="phone1" /><param name="phone2" />
            <param name="email1" /><param name="email2" />
        </member>
        <member name="M:ApiRepository.ApiGetInstitution.#ctor(ApiRepository.ApiGetInstitution)">
            <summary>Initializes an instance of ApiGetInstitution, that accepts data from an existing ApiGetProfession</summary><param name="inst" />
        </member>
        <member name="M:ApiRepository.ApiGetInstitution.#ctor(System.String[])">
            <summary>Initializes an instance of ApiGetInstitution, that accepts data from a string array</summary><param name="array" />
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.InstitutionUuid">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.InstitutionName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.AdministrationInstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.AdministrationInstitutionUuid">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.ServiceInstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.ServiceInstitutionUuid">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.ProductionUnitIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Road">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Zip">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Town">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Municipality">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Country">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Phone1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Phone2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Email1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.Email2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetInstitution.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetInstitution.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.ApiGetOrganization">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetOrganization.#ctor">
            <summary>Initializes an empty instance of ApiGetOrganization</summary>
        </member>
        <member name="M:ApiRepository.ApiGetOrganization.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ApiGetOrganization</summary><param name="actDate">ActivationDate</param><param name="deactDate">DeactivationDate</param><param name="inst">Institution</param><param name="orgId">OrganizationIdentifier</param>
        </member>
        <member name="M:ApiRepository.ApiGetOrganization.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of ApiGetOrganization from Database</summary><param name="id" /><param name="actDate">ActivationDate</param><param name="deactDate">DeactivationDate</param><param name="inst">Institution</param><param name="orgId">OrganizationIdentifier</param>
        </member>
        <member name="M:ApiRepository.ApiGetOrganization.#ctor(ApiRepository.ApiGetOrganization)">
            <summary>Initializes an instance of ApiGetOrganization, that accepts data from an existing ApiGetOrganization</summary><param name="org" />
        </member>
        <member name="M:ApiRepository.ApiGetOrganization.#ctor(System.String[])">
            <summary>Initializes an instance of ApiGetOrganization, that accepts data from a string array</summary><param name="array" />
        </member>
        <member name="P:ApiRepository.ApiGetOrganization.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganization.ActivationDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganization.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganization.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganization.OrganizationIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganization.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganization.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetOrganization.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.ApiGetOrganizationStructure">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetOrganizationStructure.#ctor">
            <summary>Initializes an empty instance of ApiGetOrganizationStructure</summary>
        </member>
        <member name="M:ApiRepository.ApiGetOrganizationStructure.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of ApiGetOrganizationStructure</summary><param name="inst">Institution</param><param name="orgStructureId">OrganizationStructureIdentifier</param>
        </member>
        <member name="M:ApiRepository.ApiGetOrganizationStructure.#ctor(System.Int32,System.String,System.String)">
            <summary>Initializes an instance of ApiGetOrganizationStructure from Database</summary><param name="id" /><param name="inst">Institution</param><param name="orgStructureId">OrganizationStructureIdentifier</param>
        </member>
        <member name="M:ApiRepository.ApiGetOrganizationStructure.#ctor(ApiRepository.ApiGetOrganizationStructure)">
            <summary>Initializes an instance of ApiGetOrganizationStructure, that accepts data from an existing ApiGetOrganizationStructure</summary><param name="structure" />
        </member>
        <member name="M:ApiRepository.ApiGetOrganizationStructure.#ctor(System.String[])">
            <summary>Initializes an instance of ApiGetOrganizationStructure, that accepts data from a string array</summary><param name="array" />
        </member>
        <member name="P:ApiRepository.ApiGetOrganizationStructure.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganizationStructure.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganizationStructure.OrganizationStructureIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganizationStructure.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetOrganizationStructure.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetOrganizationStructure.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.ApiGetPerson">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetPerson.#ctor">
            <summary>Initializes an empty instance of ApiGetPerson</summary>
        </member>
        <member name="M:ApiRepository.ApiGetPerson.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ApiGetPerson</summary><param name="inst">Institution</param><param name="cpr" /><param name="givenName" /><param name="surName" /><param name="road" />
            <param name="zip" /><param name="town" /><param name="muni">Municipality</param><param name="country" /><param name="phone1" /><param name="phone2" /><param name="email1" /><param name="email2" />
        </member>
        <member name="M:ApiRepository.ApiGetPerson.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of ApiGetPerson from Database</summary><param name="id" /><param name="inst">Institution</param><param name="cpr" /><param name="givenName" /><param name="surName" /><param name="road" />
            <param name="zip" /><param name="town" /><param name="muni">Municipality</param><param name="country" /><param name="phone1" /><param name="phone2" /><param name="email1" /><param name="email2" />
        </member>
        <member name="M:ApiRepository.ApiGetPerson.#ctor(ApiRepository.ApiGetPerson)">
            <summary>Initializes an instance of ApiGetPerson, that accepts data from an existing ApiGetPerson</summary><param name="pers" />
        </member>
        <member name="M:ApiRepository.ApiGetPerson.#ctor(System.String[])">
            <summary>Initializes an instance of ApiGetPerson, that accepts data from a string array</summary><param name="resultArray" />
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Cpr">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.GivenName">
            <remarks/> { get => id; set => id=value; }
        </member>
        <member name="P:ApiRepository.ApiGetPerson.SurName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Road">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Zip">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Town">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Municipality">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Country">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Phone1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Phone2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Email1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.Email2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetPerson.CsvHeader">
            <remarks />
        </member>
        <member name="P:ApiRepository.ApiGetPerson.CsvValue">
            <remarks />
        </member>
        <member name="M:ApiRepository.ApiGetPerson.ToXmlString">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:ApiRepository.ApiGetProfession">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetProfession.#ctor">
            <summary>Initializes an empty instance of ApiGetProfession</summary>
        </member>
        <member name="M:ApiRepository.ApiGetProfession.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of ApiGetProfession</summary><param name="actDate">ActivationDate</param><param name="deactDate">DeactivationDate</param><param name="inst">Institution</param><param name="jobPosId">JobPositionIdentifier</param>
            <param name="jobPosName">JobPositionName</param><param name="jobPosLev">JobPositionLevelCode</param><param name="emplName">EmploymentName</param><param name="appCode">AppointmentCode</param>
        </member>
        <member name="M:ApiRepository.ApiGetProfession.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of ApiGetProfession from Database</summary><param name="id" /><param name="actDate">ActivationDate</param><param name="deactDate">DeactivationDate</param><param name="inst">Institution</param>
            <param name="jobPosId">JobPositionIdentifier</param><param name="jobPosName">JobPositionName</param><param name="jobPosLev">JobPositionLevelCode</param><param name="emplName">EmploymentName</param><param name="appCode">AppointmentCode</param>
        </member>
        <member name="M:ApiRepository.ApiGetProfession.#ctor(ApiRepository.ApiGetProfession)">
            <summary>Initializes an instance of ApiGetProfession, that accepts data from an existing ApiGetProfession</summary><param name="prof" />
        </member>
        <member name="M:ApiRepository.ApiGetProfession.#ctor(System.String[])">
            <summary>Initializes an instance of ApiGetProfession, that accepts data from a string array</summary><param name="array" />
        </member>
        <member name="P:ApiRepository.ApiGetProfession.Id">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.ActivationDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.Institution">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.JobPositionIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.JobPositionName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.JobPositionLevelCode">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.EmploymentName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.AppointmentCode">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.CsvHeader">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiGetProfession.CsvValue">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiGetProfession.ToXmlString">
            <returns>Field content as xml as string</returns>
        </member>
        <member name="T:ApiRepository.ApiMochPerson">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiMochPerson.#ctor">
            <summary>Initializes an empty instance of ApiMochPerson</summary>
        </member>
        <member name="M:ApiRepository.ApiMochPerson.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes an instance of ApiMochPerson from NET-API</summary><param name="employmentId" /><param name="institutionId" />
            <param name="givenName" /><param name="surName" /><param name="email1" /><param name="email2" /><param name="departmentName" />
        </member>
        <member name="M:ApiRepository.ApiMochPerson.#ctor(ApiRepository.ApiMochPerson)">
            <summary>Initializes an instance of ApiMochPerson, that accepts data from an existing ApiMochPerson</summary><param name="pers" />
        </member>
        <member name="M:ApiRepository.ApiMochPerson.#ctor(System.String[])">
            <summary>Initializes an instance of ApiMochPerson, that accepts data from a string array</summary><param name="array" />
        </member>
        <member name="P:ApiRepository.ApiMochPerson.EmploymentIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiMochPerson.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiMochPerson.GivenName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiMochPerson.SurName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiMochPerson.Email1">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiMochPerson.Email2">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiMochPerson.DepartmentName">
            <remarks/>
        </member>
        <member name="P:ApiRepository.ApiMochPerson.CsvHeader">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiMochPerson.CheckEmail">
            <remarks/>
        </member>
        <member name="M:ApiRepository.ApiMochPerson.ToString">
            <returns>Content of this ApiMochPerson as string</returns>
        </member>
        <member name="M:ApiRepository.ApiMochPerson.ToCsvValue(System.String,System.String)">
            <returns>Field content as string</returns><param name="roles">user_roles - from SdNetApiGui</param><param name="pw">tmp_password - from SdNetApiGui</param>
        </member>
        <member name="M:ApiRepository.ApiMochPerson.ToXmlString(System.String,System.String)">
            <returns>Field content as xml string</returns>
        </member>
        <member name="T:WsRepository.Body">
            <remarks/>
        </member>
        <member name="M:WsRepository.Body.#ctor">
            <summary>Initializes an empty instance of Body</summary>
        </member>
        <member name="M:WsRepository.Body.#ctor(WsRepository.GetDepartment20111201,WsRepository.GetEmployment20111201,WsRepository.GetEmploymentChanged20111201,WsRepository.GetEmploymentChangedAtDate20111201,WsRepository.GetInstitution20111201,WsRepository.GetOrganization20111201,WsRepository.GetPerson20111201,WsRepository.GetPersonChangedAtDate20111201,WsRepository.GetProfession20080201)">
            <summary>Initializes a new instance of Body</summary><param name="getDepartment20111201" /><param name="getEmployment20111201" /><param name="getEmploymentChanged20111201" /><param name="getEmploymentChangedAtDate20111201" />
            <param name="getInstitution20111201" /><param name="getOrganization20111201" /><param name="getPerson20111201" /><param name="getPersonChangedAtDate20111201" /><param name="getProfession20080201" />
        </member>
        <member name="M:WsRepository.Body.#ctor(WsRepository.Body)">
            <summary>Initializes a new instance of Body accepting data from existing Body</summary><param name="body" />
        </member>
        <member name="P:WsRepository.Body.GetDepartment20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.Body.GetEmployment20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.Body.GetEmploymentChanged20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.Body.GetEmploymentChangedAtDate20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.Body.GetInstitution20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.Body.GetOrganization20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.Body.GetPerson20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.Body.GetPersonChangedAtDate20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.Body.GetProfession20080201">
            <remarks/>
        </member>
        <member name="T:WsRepository.Envelope">
            <remarks/>
        </member>
        <member name="M:WsRepository.Envelope.#ctor">
            <summary>Initializes an empty instance of Envelope</summary>
        </member>
        <member name="M:WsRepository.Envelope.#ctor(WsRepository.Body)">
            <summary>Initializes a new instance of Envelope</summary><param name="body" />
        </member>
        <member name="M:WsRepository.Envelope.#ctor(WsRepository.Envelope)">
            <summary>Initializes a new instance of Envelope accepting data from existing Envelope</summary><param name="envelope" />
        </member>
        <member name="P:WsRepository.Envelope.Body">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetDepartment20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartment20111201.GetDepartmentRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartment20111201.RegionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartment20111201.RegionUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartment20111201.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartment20111201.InstitutionUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartment20111201.Departments">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetDepartmentRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.ContactInformationIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.DepartmentNameIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.EmploymentDepartmentIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.PostalAddressIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.ProductionUnitIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetDepartmentRequestStructure.UuidIndicator">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetEmployment20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmployment20111201.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmployment20111201.GetEmploymentRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmployment20111201.Persons">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetEmploymentChanged20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChanged20111201.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChanged20111201.GetEmploymentChangedRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChanged20111201.Persons">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetEmploymentChangedAtDate20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDate20111201.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDate20111201.GetEmploymentChangedAtDateRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDate20111201.Persons">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetEmploymentChangedAtDateRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.ActivationTime">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.DeactivationTime">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.DepartmentIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.EmploymentStatusIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.ProfessionIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.SalaryAgreementIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.SalaryCodeGroupIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.WorkingTimeIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedAtDateRequestStructure.UuidIndicator">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetEmploymentChangedRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.DepartmentIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.EmploymentStatusIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.ProfessionIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.SalaryAgreementIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.SalaryCodeGroupIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.WorkingTimeIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentChangedRequestStructure.UuidIndicator">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetEmploymentRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.EffectiveDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.StatusActiveIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.StatusPassiveIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.DepartmentIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.EmploymentStatusIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.ProfessionIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.SalaryAgreementIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.SalaryCodeGroupIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.WorkingTimeIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetEmploymentRequestStructure.UuidIndicator">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetInstitution20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetInstitution20111201.GetInstitutionRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetInstitution20111201.Region">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetInstitutionRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetInstitutionRequestStructure.RegionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetInstitutionRequestStructure.AdministrationIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetInstitutionRequestStructure.ContactInformationIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetInstitutionRequestStructure.PostalAddressIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetInstitutionRequestStructure.ProductionUnitIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetInstitutionRequestStructure.UuidIndicator">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetOrganization20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganization20111201.GetOrganizationRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganization20111201.RegionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganization20111201.RegionUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganization20111201.InstitutionUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganization20111201.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganization20111201.DepartmentStructureName">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganization20111201.OrganizationStructures">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganization20111201.Organizations">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetOrganizationRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganizationRequestStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganizationRequestStructure.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganizationRequestStructure.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetOrganizationRequestStructure.UuidIndicator">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetPerson20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPerson20111201.GetPersonRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPerson20111201.Persons">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetPersonChangedAtDate20111201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDate20111201.GetPersonChangedAtDateRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDate20111201.Persons">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetPersonChangedAtDateRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDateRequestStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDateRequestStructure.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDateRequestStructure.ActivationTime">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDateRequestStructure.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDateRequestStructure.DeactivationTime">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDateRequestStructure.ContactInformationIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonChangedAtDateRequestStructure.PostalAddressIndicator">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetPersonRequestStructure">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonRequestStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonRequestStructure.EffectiveDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonRequestStructure.StatusActiveIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonRequestStructure.StatusPassiveIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonRequestStructure.ContactInformationIndicator">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetPersonRequestStructure.PostalAddressIndicator">
            <remarks/>
        </member>
        <member name="T:WsRepository.GetProfession20080201">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetProfession20080201.RequestKey">
            <remarks/>
        </member>
        <member name="P:WsRepository.GetProfession20080201.Professions">
            <remarks/>
        </member>
        <member name="T:WsRepository.OrganizationInformation">
            <remarks/>
        </member>
        <member name="P:WsRepository.OrganizationInformation.Region">
            <remarks/>
        </member>
        <member name="T:WsRepository.Region">
            <remarks/>
        </member>
        <member name="M:WsRepository.Region.#ctor">
            <summary>Initializes an empty instance of Region</summary>
        </member>
        <member name="M:WsRepository.Region.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{WsRepository.WsInstitution})">
            <summary>Initializes a new instance of Region</summary><param name="regId">RegionIdentifier</param><param name="regUuid">RegionUuidIdentifier</param><param name="regName">RegionName</param><param name="insts">Institutions</param>
        </member>
        <member name="M:WsRepository.Region.#ctor(WsRepository.Region)">
            <summary>Initializes a new instance of Region accepting data from existing Region</summary><param name="reg" />
        </member>
        <member name="P:WsRepository.Region.RegionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.Region.RegionUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.Region.RegionName">
            <remarks/>
        </member>
        <member name="P:WsRepository.Region.Institutions">
            <remarks/>
        </member>
        <member name="T:WsRepository.RequestKey">
            <remarks />
        </member>
        <member name="P:WsRepository.RequestKey.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="T:WsRepository.WsContactInformation">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsContactInformation.#ctor">
            <summary>Initializes an empty instance of WsContactInformation</summary>
        </member>
        <member name="M:WsRepository.WsContactInformation.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>Initializes a new instance of <see cref="T:Repository.ContactInformation"/></summary><param name="telephoneNumbers" /><param name="emailAddresses" />
        </member>
        <member name="M:WsRepository.WsContactInformation.#ctor(WsRepository.WsContactInformation)">
            <summary>Initializes a new instance of WsContactInformation, that accepts data from existing ContactInformation</summary><param name="info" />
        </member>
        <member name="P:WsRepository.WsContactInformation.TelephoneNumbers">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsContactInformation.EmailAddresses">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsContactInformation.ToContactInformation(System.String,System.String)">
            <summary>Copies content from lists to respective fields</summary><param name="parentId" /><param name="institutionId" />
        </member>
        <member name="M:WsRepository.WsContactInformation.ToString">
            <returns>Content as string</returns>
        </member>
        <member name="T:WsRepository.WsDepartment">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsDepartment.#ctor">
            <summary>Initializes an empty instance of Department</summary>
        </member>
        <member name="M:WsRepository.WsDepartment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,WsRepository.WsPostalAddress,WsRepository.WsContactInformation)">
            <summary>Initializes a new instance of Department</summary><param name="activationDate" /><param name="deactivationDate" /><param name="departmentUuid" />
            <param name="departmentId" /><param name="departmentLevelId" /><param name="departmentName" /><param name="productionUnitId" /><param name="institutionId" />
            <param name="postalAddress" /><param name="contactInfo" />
        </member>
        <member name="M:WsRepository.WsDepartment.#ctor(WsRepository.WsDepartment)">
            <summary>Initializes a new instance of Department, that accepts data from existing Department</summary><param name="department" />
        </member>
        <member name="P:WsRepository.WsDepartment.ActivationDate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsDepartment.DeactivationDate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsDepartment.DepartmentUuidIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsDepartment.DepartmentIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsDepartment.DepartmentLevelIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsDepartment.DepartmentName">
            <remarks />
        </member>
        <member name="P:WsRepository.WsDepartment.ProductionUnitIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsDepartment.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsDepartment.PostalAddress">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsDepartment.ContactInformation">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsDepartment.ToContactInformation">
            <returns>This WsDepartment.WsContactInformation as ContactInformation</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsDepartment.ToDepartment">
            <returns>This WsDepartment as Department</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsDepartment.ToDepartment(System.String)">
            <returns>This WsDepartment as Department</returns><param name="institutionId" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsDepartment.ToPostalAddress">
            <returns>This WsDepartment.WsPostalAddress as PostalAddress</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsDepartment.ToString">
            <returns>Content of this Department as string</returns>
        </member>
        <member name="T:WsRepository.WsDepartmentLevelReference">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsDepartmentLevelReference.#ctor">
            <summary>Initializes an empty instance of WsDepartmentLevelReference</summary>
        </member>
        <member name="M:WsRepository.WsDepartmentLevelReference.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{WsRepository.WsDepartmentLevelReference})">
            <summary>Initializes a new instance of WsDepartmentLevelReference</summary><param name="departmentLevelIdentifier" /><param name="organizationStructure" /><param name="list" /><param name="seniorDLR" />
        </member>
        <member name="M:WsRepository.WsDepartmentLevelReference.#ctor(WsRepository.WsDepartmentLevelReference)">
            <summary>Initializes a new instance of WsDepartmentLevelReference, that accepts data from an existing DepartmentLevelReference</summary><param name="entity" />
        </member>
        <member name="P:WsRepository.WsDepartmentLevelReference.DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsDepartmentLevelReference.OrganizationStructure">
            <summary>Aka. InstitutionIdentifier</summary>
        </member>
        <member name="P:WsRepository.WsDepartmentLevelReference.SeniorDepartmentLevelReference">
            <summary>Aka. DepartmentLevelIdentifier</summary>
        </member>
        <member name="P:WsRepository.WsDepartmentLevelReference.WsDepartmentLevelReferences">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsDepartmentLevelReference.ToDepartmentLevelReference">
            <returns>Trimmed copy of this DepartmentLevelReference</returns>
        </member>
        <member name="M:WsRepository.WsDepartmentLevelReference.ToString">
            <returns>Content of this DepartmentLevelReference as string</returns>
        </member>
        <member name="T:WsRepository.WsDepartmentReference">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsDepartmentReference.#ctor">
            <summary>Initializes an empty instance of WsDepartmentReference</summary>
        </member>
        <member name="M:WsRepository.WsDepartmentReference.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{WsRepository.WsDepartmentReference})">
            <summary>Initializes a new instance of WsDepartmentReference</summary><param name="departmentId" /><param name="departmentUuid"></param><param name="departmentLevelId" /><param name="list" />
        </member>
        <member name="M:WsRepository.WsDepartmentReference.#ctor(WsRepository.WsDepartmentReference)">
            <summary>Initializes a new instance of WsDepartmentReference, that accepts data from an existing DepartmentReference</summary><param name="entity" />
        </member>
        <member name="P:WsRepository.WsDepartmentReference.DepartmentIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsDepartmentReference.DepartmentUuidIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsDepartmentReference.DepartmentLevelIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsDepartmentReference.Organization">
            <summary>Aka. InstitutionIdentifier</summary>
        </member>
        <member name="F:WsRepository.WsDepartmentReference.SeniorDepartmentReference">
            <summary>Aka. DepartmentUuidIdentifierIdentifier</summary>
        </member>
        <member name="P:WsRepository.WsDepartmentReference.WsDepartmentReferences">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsDepartmentReference.ToDepartmentReference">
            <returns>Result as DepartmentReference</returns>
        </member>
        <member name="M:WsRepository.WsDepartmentReference.ToString">
            <returns>Content of this DepartmentReference as string</returns>
        </member>
        <member name="T:WsRepository.WsEmployment">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmployment.#ctor">
            <summary>Initializes an empty instance of Employment</summary>
        </member>
        <member name="M:WsRepository.WsEmployment.#ctor(System.String,System.String,System.String,System.String,System.String,WsRepository.WsDepartment,WsRepository.WsEmploymentProfession,WsRepository.WsEmploymentStatus,WsRepository.WsSalaryAgreement,WsRepository.WsSalaryCodeGroup,WsRepository.WsWorkingTime)">
            <summary>Initializes a new instance of Employment from SDWS</summary><param name="employmentId" /><param name="employmentDate" /><param name="anniversaryDate" /><param name="institution" /><param name="employee" />
            <param name="employmentDepartment" /><param name="profession" /><param name="employmentStatus" /><param name="salaryAgreement" /><param name="salaryCodeGroup" /><param name="workingTime" />
        </member>
        <member name="M:WsRepository.WsEmployment.#ctor(WsRepository.WsEmployment)">
            <summary>Initializes a new instance of Employment, that accepts data from an existing Employment</summary><param name="employmentStatus" />
        </member>
        <member name="P:WsRepository.WsEmployment.EmploymentIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.EmploymentDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.AnniversaryDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.Employee">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.EmploymentDepartment">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.Profession">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.EmploymentStatus">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.SalaryAgreement">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.SalaryCodeGroup">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmployment.WorkingTime">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmployment.ToString">
            <returns>Content of this Employment as string</returns>
        </member>
        <member name="M:WsRepository.WsEmployment.ToDepartment">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmployment.ToEmployment">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmployment.ToEmploymentStatus">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmployment.ToEmploymentProfession">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmployment.ToSalaryAgreement">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmployment.ToSalaryCodeGroup">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmployment.ToWorkingTime">
            <remarks/>
        </member>
        <member name="T:WsRepository.WsEmploymentProfession">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmploymentProfession.#ctor">
            <summary>Initializes an empty instance of Profession</summary>
        </member>
        <member name="M:WsRepository.WsEmploymentProfession.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Profession</summary><param name="activationDate" /><param name="deactivationDate" />
            <param name="jobPositionId" /><param name="institutionId" /><param name="employmentName" /><param name="appointmentCode" />
        </member>
        <member name="M:WsRepository.WsEmploymentProfession.#ctor(WsRepository.WsEmploymentProfession)">
            <summary>Initializes a new instance of WsEmploymentProfession, that accepts data from existing WsEmploymentProfession</summary><param name="profession">Profession</param>
        </member>
        <member name="P:WsRepository.WsEmploymentProfession.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmploymentProfession.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmploymentProfession.JobPositionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmploymentProfession.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmploymentProfession.EmploymentName">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmploymentProfession.AppointmentCode">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmploymentProfession.ToEmploymentProfession">
            <returns>Content of this Profession as string</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsEmploymentProfession.ToEmploymentProfession(System.String)">
            <returns>Content of this Profession as string</returns><param name="institutionId" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsEmploymentProfession.ToString">
            <returns>Content of this Profession as string</returns>
        </member>
        <member name="T:WsRepository.WsEmploymentStatus">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmploymentStatus.#ctor">
            <summary>Initializes an empty instance of EmploymentStatus</summary>
        </member>
        <member name="M:WsRepository.WsEmploymentStatus.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of EmploymentStatus</summary><param name="activationDate" /><param name="deactivationDate" /><param name="employmentStatusCode" /><param name="markedForDeletion" />
        </member>
        <member name="M:WsRepository.WsEmploymentStatus.#ctor(WsRepository.WsEmploymentStatus)">
            <summary>Initializes a new instance of WsEmploymentStatus, that accepts data from existing WsEmploymentStatus</summary><param name="employmentStatus" />
        </member>
        <member name="P:WsRepository.WsEmploymentStatus.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmploymentStatus.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmploymentStatus.EmploymentStatusCode">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsEmploymentStatus.MarkedForDeletion">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsEmploymentStatus.ToEmploymentStatus(System.String,System.String)">
            <returns>Content of this EmploymentStatus as a long string</returns><param name="employmentId" /><param name="institutionId" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsEmploymentStatus.ToString">
            <returns>Content of this EmploymentStatus as string</returns>
        </member>
        <member name="T:WsRepository.WsInstitution">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsInstitution.#ctor">
            <summary>Initializes an empty instance of Institution</summary>
        </member>
        <member name="M:WsRepository.WsInstitution.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of Institution</summary><param name="institutionUuid" /><param name="institutionId" /><param name="institutionName" />
        </member>
        <member name="M:WsRepository.WsInstitution.#ctor(Repository.Institution)">
            <summary>Initializes a new instance of Institution, that accepts data from an existing Institution</summary><param name="inst" />
        </member>
        <member name="M:WsRepository.WsInstitution.#ctor(WsRepository.WsInstitution)">
            <summary>Initializes a new instance of Institution, that accepts data from an existing Institution</summary><param name="inst" />
        </member>
        <member name="P:WsRepository.WsInstitution.InstitutionUuidIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsInstitution.InstitutionIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsInstitution.InstitutionName">
            <remarks />
        </member>
        <member name="M:WsRepository.WsInstitution.ToInstitution">
            <returns>This WsInstitution as Institution</returns>
        </member>
        <member name="M:WsRepository.WsInstitution.ToString">
            <returns>Content of this Institution as string</returns>
        </member>
        <member name="T:WsRepository.WsLists">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.WsOrganizationList">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsLists.WsOrganizationStructureList">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsLists.WsPersonList">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsLists.GetDepartment20111201List">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.GetEmployment20111201List">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.GetEmploymentChanged20111201List">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.GetEmploymentChangedAtDate20111201List">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.GetInstitution20111201List">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.GetOrganization20111201List">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.GetPerson20111201List">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.GetPersonChangedAtDate20111201List">
            <remarks />
        </member>
        <member name="P:WsRepository.WsLists.GetProfession20080201List">
            <remarks />
        </member>
        <member name="T:WsRepository.WsOrganization">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsOrganization.#ctor">
            <summary>Initializes an empty instance of Organization</summary>
        </member>
        <member name="M:WsRepository.WsOrganization.#ctor(System.String,System.String,System.Collections.Generic.List{WsRepository.WsDepartmentReference},System.String)">
            <summary>Initializes a new instance of Organization</summary><param name="activationDate" /><param name="deactivationDate" /><param name="institutionId" /><param name="list"></param>
        </member>
        <member name="M:WsRepository.WsOrganization.#ctor(WsRepository.WsOrganization)">
            <summary>Initializes a new instance of Organization, that accepts data from <paramref name="entity"/></summary><param name="entity" />
        </member>
        <member name="P:WsRepository.WsOrganization.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsOrganization.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsOrganization.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsOrganization.WsDepartmentReferences">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsOrganization.ToOrganization">
            <returns>This WsOrganizatio as Organization</returns>
        </member>
        <member name="M:WsRepository.WsOrganization.ToString">
            <returns>Content of this DepartmentReference as string</returns>
        </member>
        <member name="T:WsRepository.WsOrganizationStructure">
            <summary>Principally receives no data from SDWS, except related departmentreferencces</summary>
        </member>
        <member name="M:WsRepository.WsOrganizationStructure.#ctor">
            <summary>Initializes an empty instance of OrganizationStructure</summary>
        </member>
        <member name="M:WsRepository.WsOrganizationStructure.#ctor(System.String,System.Collections.Generic.List{WsRepository.WsDepartmentLevelReference})">
            <summary>Initializes a new instance of OrganizationStructure</summary><param name="institutionId" /><param name="list" />
        </member>
        <member name="M:WsRepository.WsOrganizationStructure.#ctor(WsRepository.WsOrganizationStructure)">
            <summary>Initializes a new instance of OrganizationStructure, that accepts data from an existing OrganizationStructure</summary><param name="entity" />
        </member>
        <member name="P:WsRepository.WsOrganizationStructure.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsOrganizationStructure.WsDepartmentLevelReferences">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsOrganizationStructure.ToOrganizationStructure">
            <returns>Trimmed copy of this OrganizationStructure</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="T:WsRepository.WsPerson">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsPerson.#ctor">
            <summary>Initializes an empty instance of WsPerson</summary>
        </member>
        <member name="M:WsRepository.WsPerson.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.List{WsRepository.WsEmployment},WsRepository.WsPostalAddress,WsRepository.WsContactInformation)">
            <summary>Initializes a new instance of WsPerson</summary><param name="personCivilRegistrationId" /><param name="givenName">personGivenName</param>
            <param name="surName">personSurnameName</param><param name="institutionId" /><param name="postalAddress" /><param name="contactInformation" /><param name="list" />
        </member>
        <member name="M:WsRepository.WsPerson.#ctor(WsRepository.WsPerson)">
            <summary>Initializes a new instance of WsPerson, that accepts data from an existing WsPerson</summary><param name="pers"></param>
        </member>
        <member name="P:WsRepository.WsPerson.PersonCivilRegistrationIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPerson.PersonGivenName">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPerson.PersonSurnameName">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPerson.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPerson.PostalAddress">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPerson.ContactInformation">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPerson.WsEmployments">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsPerson.ToContactInformation">
            <returns>This WsPerson.WsContactInformation as ContactInformation</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsPerson.ToPerson">
            <returns>This WsPerson as Person</returns><exception cref="T:System.NullReferenceException" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsPerson.ToPostalAddress">
            <returns>This WsPerson.WsPostalAddress as PostalAddress</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsPerson.ToString">
            <returns>Content of Person as string</returns>
        </member>
        <member name="T:WsRepository.WsPostalAddress">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsPostalAddress.#ctor">
            <summary>Initializes an empty instance of PostalAddress</summary>
        </member>
        <member name="M:WsRepository.WsPostalAddress.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of PostalAddress</summary><param name="road">StandardAddressIdentifier</param><param name="zip">PostalCode</param><param name="town">DistrictName</param><param name="munic">MunicipalityCode</param><param name="country">CountryIdentificationCode</param>
        </member>
        <member name="M:WsRepository.WsPostalAddress.#ctor(WsRepository.WsPostalAddress)">
            <summary>Initializes a new instance of PostalAddress, that accepts data from existing PostalAddress</summary><param name="addr" />
        </member>
        <member name="P:WsRepository.WsPostalAddress.StandardAddressIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPostalAddress.PostalCode">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPostalAddress.DistrictName">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPostalAddress.MunicipalityCode">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsPostalAddress.CountryIdentificationCode">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsPostalAddress.ToPostalAddress(System.String,System.String)">
            <returns>This WsPostalAddress as PostalAddress</returns><param name="parentId" /><param name="institutionId" />
        </member>
        <member name="M:WsRepository.WsPostalAddress.ToString">
            <returns>Content of this PostalAddress as string</returns>
        </member>
        <member name="T:WsRepository.WsProfession">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsProfession.#ctor">
            <summary>Initializes an empty instance of Profession</summary>
        </member>
        <member name="M:WsRepository.WsProfession.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of Profession</summary><param name="activationDate" /><param name="deactivationDate" /><param name="jobPositionId" />
            <param name="jobPositionName" /><param name="jobPositionLevelCode" />
        </member>
        <member name="M:WsRepository.WsProfession.#ctor(WsRepository.WsProfession)">
            <summary>Initializes a new instance of Profession, that accepts data from existing Profession</summary><param name="prof">Profession</param>
        </member>
        <member name="P:WsRepository.WsProfession.ActivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsProfession.DeactivationDate">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsProfession.JobPositionIdentifier">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsProfession.JobPositionName">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsProfession.JobPositionLevelCode">
            <remarks/>
        </member>
        <member name="P:WsRepository.WsProfession.InstitutionIdentifier">
            <remarks/>
        </member>
        <member name="M:WsRepository.WsProfession.ToProfession">
            <returns>Content of this Profession as string</returns><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsProfession.ToProfession(System.String)">
            <returns>Content of this Profession as string</returns><param name="institutionId" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsProfession.ToString">
            <returns>Content of this Profession as string</returns>
        </member>
        <member name="T:WsRepository.WsSalaryAgreement">
            <remarks />
        </member>
        <member name="M:WsRepository.WsSalaryAgreement.#ctor">
            <summary>Initializes an empty instance of SalaryAgreement</summary>
        </member>
        <member name="M:WsRepository.WsSalaryAgreement.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of SalaryAgreement</summary><param name="activationDate" /><param name="deactivationDate" /><param name="salaryAgreementId" /><param name="salaryClassId" />
            <param name="salaryScaleId" /><param name="prepaidIndicator" /><param name="seniorityDate" />
        </member>
        <member name="M:WsRepository.WsSalaryAgreement.#ctor(WsRepository.WsSalaryAgreement)">
            <summary>Initializes a new instance of SalaryAgreement, that accepts data from an existing SalaryAgreement</summary><param name="agree" />
        </member>
        <member name="P:WsRepository.WsSalaryAgreement.ActivationDate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsSalaryAgreement.DeactivationDate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsSalaryAgreement.SalaryAgreementIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsSalaryAgreement.SalaryClassIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsSalaryAgreement.SalaryScaleIdentifier">
            <remarks />
        </member>
        <member name="P:WsRepository.WsSalaryAgreement.PrepaidIndicator">
            <remarks />
        </member>
        <member name="P:WsRepository.WsSalaryAgreement.SeniorityDate">
            <remarks />
        </member>
        <member name="M:WsRepository.WsSalaryAgreement.ToSalaryAgreement(System.String,System.String)">
            <returns>Content of SalaryAgreement as a long string</returns><param name="employmentId" /><param name="institutionId" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsSalaryAgreement.ToString">
            <returns>Content of SalaryAgreement as string</returns>
        </member>
        <member name="T:WsRepository.WsSalaryCodeGroup">
            <remarks />
        </member>
        <member name="M:WsRepository.WsSalaryCodeGroup.#ctor">
            <summary>Initializes an empty instance of SalaryCodeGroup</summary>
        </member>
        <member name="M:WsRepository.WsSalaryCodeGroup.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of SalaryCodeGroup</summary><param name="activationDate" /><param name="deactivationDate" /><param name="pensionCode" />
        </member>
        <member name="M:WsRepository.WsSalaryCodeGroup.#ctor(WsRepository.WsSalaryCodeGroup)">
            <summary>Initializes a new instance of SalaryCodeGroup from database, that accepts data from existing SalaryCodeGroup</summary><param name="group" />
        </member>
        <member name="P:WsRepository.WsSalaryCodeGroup.ActivationDate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsSalaryCodeGroup.DeactivationDate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsSalaryCodeGroup.PensionCode">
            <remarks />
        </member>
        <member name="M:WsRepository.WsSalaryCodeGroup.ToSalaryCodeGroup(System.String,System.String)">
            <returns>This WsSalaryCodeGroup as SalaryCodeGroup</returns><param name="employmentId" /><param name="institutionId" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsSalaryCodeGroup.ToString">
            <returns>Content of SalaryCodeGroup as string</returns>
        </member>
        <member name="T:WsRepository.WsWorkingTime">
            <remarks />
        </member>
        <member name="M:WsRepository.WsWorkingTime.#ctor">
            <summary>Initializes an empty instance of WorkingTime</summary>
        </member>
        <member name="M:WsRepository.WsWorkingTime.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of WorkingTime</summary><param name="activationDate" /><param name="deactivationDate" /><param name="occupationRate" />
            <param name="salaryRate" /><param name="salariedIndicator" /><param name="automaticRaiseIndicator" /><param name="fullTimeIndicator" />
        </member>
        <member name="M:WsRepository.WsWorkingTime.#ctor(WsRepository.WsWorkingTime)">
            <summary>Initializes a new instance of WorkingTime,that accepts data from existing WorkingTime</summary><param name="time" />
        </member>
        <member name="P:WsRepository.WsWorkingTime.ActivationDate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsWorkingTime.DeactivationDate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsWorkingTime.OccupationRate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsWorkingTime.SalaryRate">
            <remarks />
        </member>
        <member name="P:WsRepository.WsWorkingTime.SalariedIndicator">
            <remarks />
        </member>
        <member name="P:WsRepository.WsWorkingTime.AutomaticRaiseIndicator">
            <remarks />
        </member>
        <member name="P:WsRepository.WsWorkingTime.FullTimeIndicator">
            <remarks />
        </member>
        <member name="M:WsRepository.WsWorkingTime.ToWorkingTime(System.String,System.String)">
            <returns>Content of this WorkingTime as a long string</returns><param name="employmentId" /><param name="institutionId" /><exception cref="T:System.NullReferenceException" />
        </member>
        <member name="M:WsRepository.WsWorkingTime.ToString">
            <returns>Content of this WorkingTime as string</returns>
        </member>
    </members>
</doc>
