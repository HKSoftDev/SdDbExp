<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LogicTier</name>
    </assembly>
    <members>
        <member name="T:LogicTier.Bizz">
            <remarks />
            <remarks/>
            <remarks/>
            <remarks/>
            <remarks/>
            <remarks/>
            <remarks />
            <remarks/>
            <remarks/>
            <remarks/>
            <remarks/>
            <remarks/>
            <remarks/>
            <remarks/>
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.AddEntities``1(System.Collections.Generic.List{``0})">
            <returns>Clone of <paramref name="list"/> as List{T}</returns><typeparam name="T" /><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.AddEntities(System.Collections.Generic.List{WsRepository.WsOrganization})">
            <returns>A copy of <paramref name="list"/> as List{Organization}</returns><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.AddEntities(System.Collections.Generic.List{WsRepository.WsOrganizationStructure})">
            <returns>A copy of <paramref name="list"/> as List{OrganizationStructure}</returns><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.AddOrganizationStructureToDepartmentLevelReferencesClone(WsRepository.WsDepartmentLevelReference,System.String)">
            <summary>Adds <paramref name="organizationStructure"/> to DepartmentLevelReferences in <paramref name="reference"/></summary><param name="reference" /><param name="organizationStructure" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.AddOrganizationStructureToDepartmentLevelReferencesUpdate(WsRepository.WsDepartmentLevelReference,System.String)">
            <summary>Adds <paramref name="organizationStructure"/> to DepartmentLevelReferences in <paramref name="reference"/></summary><param name="reference" /><param name="organizationStructure" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.AddOrganizationToDepartmentReferencesClone(WsRepository.WsDepartmentReference,System.String)">
            <summary>Adds <paramref name="organization"/> to DepartmentReferences in <paramref name="reference"/></summary><param name="reference" /><param name="organization" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.AddOrganizationToDepartmentReferencesUpdate(WsRepository.WsDepartmentReference,System.String)">
            <summary>Adds <paramref name="organization"/> to DepartmentReferences in <paramref name="reference"/></summary><param name="reference" /><param name="organization" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.AddADUserToList(System.Collections.Generic.Dictionary{System.String,Repository.ContactInformation}@,Repository.ADUser)">
            <remarks /><param name="infoDict" /><param name="user" />
        </member>
        <member name="M:LogicTier.Bizz.CheckEntityExists``1(``0)">
            <returns>Result as bool</returns><typeparam name="T" /><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckDependencyDataError">
            <summary>Checks error at end of run</summary>
        </member>
        <member name="M:LogicTier.Bizz.CheckPersonDataError">
            <summary>Checks error at end of run</summary>
        </member>
        <member name="M:LogicTier.Bizz.CheckCioEmailAdresses(Repository.ContactInformation@)">
            <summary>Checks order of email addresses in <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CheckCioPhoneNumbers(Repository.ContactInformation@)">
            <summary>Checks order of phone numbers in <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CheckCioInternalPhoneNumber(System.String)">
            <summary>Checks wether or not a phone number is internal</summary><param name="phone">Phone number</param><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CheckCioResult">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CheckContactInformation(Repository.ADUser,Repository.ContactInformation)">
            <summary>Checks content of<paramref name="info"/></summary><param name="user" /><param name="info" /><exception cref="T:Repository.ArgumentEmptyException" />
        </member>
        <member name="M:LogicTier.Bizz.CheckContactInformationExist(Repository.ContactInformation)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckDepartmentExist(Repository.Department)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckDepartmentLevelReferenceExist(Repository.DepartmentLevelReference)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckDepartmentReferenceExist(Repository.DepartmentReference)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckEmploymentExist(Repository.Employment)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckEmploymentProfessionExist(Repository.EmploymentProfession)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckEmploymentStatusExist(Repository.EmploymentStatus)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckInstitutionExist(Repository.Institution)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckOrganizationExist(Repository.Organization)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckOrganizationStructureExist(Repository.OrganizationStructure)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckPersonExist(Repository.Person)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckPostalAddressExist(Repository.PostalAddress)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckProfessionExist(Repository.Profession)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckSalaryAgreementExist(Repository.SalaryAgreement)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckSalaryCodeGroupExist(Repository.SalaryCodeGroup)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckSuccessfulRunExist(Repository.SuccessfulRun)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckWorkingTimeExist(Repository.WorkingTime)">
            <returns>Result as bool</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CheckDepartmentDataError(System.String)">
            <summary>Checks error at end of cloning</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.CheckEmploymentChangedAtDateDataError(System.String)">
            <summary>Checks error at end of updating</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.CheckEmploymentChangedDataError(System.String)">
            <summary>Checks error at end of updating</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.CheckEmploymentDataError(System.String)">
            <summary>Checks error at end of cloning</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.CheckInstitutionDataError">
            <summary>Checks error at end of cloning</summary>
        </member>
        <member name="M:LogicTier.Bizz.CheckOrganizationDataError(System.String)">
            <summary>Checks error at end of cloning</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.CheckPersonChangedAtDateDataError(System.String)">
            <summary>Checks error at end of updating</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.CheckPersonDataError(System.String)">
            <summary>Checks error at end of cloning</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.CheckProfessionDataError(System.String)">
            <summary>Checks error at end of cloning</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.CheckErrors">
            <summary>Check Errors if any error stores error message in PageData</summary>
        </member>
        <member name="M:LogicTier.Bizz.CheckUsers(System.Collections.Generic.List{Repository.ADUser})">
            <summary>Compares users in <paramref name="list"/> against database and identifies data to enrich</summary><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.CheckXmEmploymentAlerts">
            <summary> Checks wether Employments in SdDatabase stub are or soon will become inactive</summary>
        </member>
        <member name="M:LogicTier.Bizz.CheckXmResult">
            <summary>Writes result of application run to log</summary>
        </member>
        <member name="M:LogicTier.Bizz.CheckADUserListForDoublets(System.Collections.Generic.List{Repository.ADUser}@)">
            <summary>Checks and removes doublet EmployeeIds from <paramref name="list"/></summary><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.CheckedEmployeeNumbersToString(System.Collections.Generic.List{System.String})">
            <returns>content of <paramref name="idList"/> as string</returns><param name="idList" />
        </member>
        <member name="M:LogicTier.Bizz.CheckMail(System.String,Repository.ContactInformation)">
            <summary>Checks wether <paramref name="mail"/> exists in <paramref name="info"/></summary><param name="mail" /><param name="info" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CheckPhone(System.String,Repository.ContactInformation)">
            <summary>Checks wether <paramref name="phone"/> exists in <paramref name="info"/></summary><param name="phone" /><param name="info" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneEntity``1(``0)">
            <returns>Clone of <paramref name="obj"/> as T</returns><typeparam name="T" /><param name="obj" />
        </member>
        <member name="M:LogicTier.Bizz.CloneList``1(System.Collections.Generic.List{``0})">
            <returns>Clone of <paramref name="list"/></returns><typeparam name="T" /><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneInstitutionData">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganizationDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganizationDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganizationDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.ClonePersonDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.ClonePersonDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.ClonePersonDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneProfessionDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneProfessionDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneProfessionDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.CloneData(System.String,System.String,System.String)">
            <summary>Cleans data - and updates database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.CloneInstitutionData(System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganizationData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.ClonePersonData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.CloneProfessionData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartments(WsRepository.GetDepartment20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneEmployments(WsRepository.GetEmployment20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneInstitutions(WsRepository.GetInstitution20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.ClonePersons(WsRepository.GetPerson20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneProfessions(WsRepository.GetProfession20080201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneContactInformation(Repository.ContactInformation@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneContactInformationNoCheck(Repository.ContactInformation@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartment(Repository.Department@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentNoCheck(Repository.Department@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentLevelReference(Repository.DepartmentLevelReference@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentLevelReferenceNoCheck(Repository.DepartmentLevelReference@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentReference(Repository.DepartmentReference@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneDepartmentReferenceNoCheck(Repository.DepartmentReference@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneEmployment(Repository.Employment@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentNoCheck(Repository.Employment@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentProfession(Repository.EmploymentProfession@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentProfessionNoCheck(Repository.EmploymentProfession@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentStatus(Repository.EmploymentStatus@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneEmploymentStatusNoCheck(Repository.EmploymentStatus@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneInstitution(Repository.Institution@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneInstitutionNoCheck(Repository.Institution@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganization(WsRepository.WsOrganization,System.String)">
            <summary>Updates Organization and DepartmentReferences</summary><param name="entity" /><param name="institutionId" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganization(Repository.Organization@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganizationNoCheck(Repository.Organization@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganizationStructure(WsRepository.WsOrganizationStructure,System.String)">
            <summary>Updates Organization and DepartmentReferences</summary><param name="entity" /><param name="institutionId" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganizationStructure(Repository.OrganizationStructure@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneOrganizationStructureNoCheck(Repository.OrganizationStructure@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.ClonePerson(Repository.Person@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.ClonePersonNoCheck(Repository.Person@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.ClonePostalAddress(Repository.PostalAddress@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.ClonePostalAddressNoCheck(Repository.PostalAddress@,System.String)">
            <summary>Updates content of <paramref name="entity"/> in database</summary><param name="entity" /><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneProfession(Repository.Profession@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneProfessionNoCheck(Repository.Profession@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneSalaryAgreement(Repository.SalaryAgreement@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneSalaryAgreementNoCheck(Repository.SalaryAgreement@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity"/><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneSalaryCodeGroup(Repository.SalaryCodeGroup@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneSalaryCodeGroupNoCheck(Repository.SalaryCodeGroup@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneWorkingTime(Repository.WorkingTime@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="employment" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.CloneWorkingTimeNoCheck(Repository.WorkingTime@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="employment" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.ConvertApiEntityListToCsvString``1(System.Collections.Generic.List{``0})">
            <returns><paramref name="list"/> as csv string</returns><typeparam name="T" /><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.ConvertApiEntityListToJsonString``1(System.Collections.Generic.List{``0})">
            <returns><paramref name="list"/> as a json string</returns><typeparam name="T" /><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.ConvertApiEntityListToXmlString``1(System.Collections.Generic.List{``0})">
            <returns><paramref name="list"/> as an xml string</returns><typeparam name="T" /><param name="list" />
        </member>
        <member name="M:LogicTier.Bizz.ConvertXmlStringToJsonString(System.String)">
            <returns><paramref name="xml"/> as json string</returns><param name="xml" />
        </member>
        <member name="M:LogicTier.Bizz.CreateInDatabaseWithId``1(``0)">
            <returns>Id as int</returns><typeparam name="T" /><param name="entity" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeleteDoubletFromDatabase``1(``0)">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrCreateInDatabase``1(``0)">
            <returns><paramref name="entity"/> updated or created into datatabase</returns><typeparam name="T" /><param name="entity" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.UpdateSuccessfulRunInDatabase(System.String,System.String)">
            <returns>Result as bool</returns><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.GetContactInformationDict">
            <returns>Result as Dictionary{string,ContactInformation} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetDepartmentDict">
            <returns>Result as Dictionary{string,Department} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetDepartmentLevelReferenceDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetDepartmentReferenceDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetEmploymentDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetEmploymentProfessionDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetEmploymentStatusDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetIdDict``1">
            <returns>Result as Dictionary{int,Institution} ordered after database Id</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetInstitutionDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetInstitutionIdDict">
            <returns>Result as Dictionary{string,Institution} ordered after InstitutionIdentifier</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetOrganizationDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetOrganizationStructureDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetPersonDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetPostalAddressDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetProfessionDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetSalaryAgreementDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetSalaryCodeGroupDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetSuccessfulRunDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetWorkingTimeDict">
            <returns>Result as Dictionary{string,T} ordered after TKey</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetListCount``1">
            <returns>Amount of entities in List{T} as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetList``1">
            <returns>Result as List{T}</returns>
        </member>
        <member name="M:LogicTier.Bizz.GetView``1">
            <returns>Result as List{T}</returns>
        </member>
        <member name="M:LogicTier.Bizz.CreateContactInformationInDatabaseWithId(Repository.ContactInformation)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateDepartmentInDatabaseWithId(Repository.Department)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateDepartmentLevelReferenceInDatabaseWithId(Repository.DepartmentLevelReference)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateDepartmentReferenceInDatabaseWithId(Repository.DepartmentReference)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateEmploymentInDatabaseWithId(Repository.Employment)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateEmploymentProfessionInDatabaseWithId(Repository.EmploymentProfession)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateEmploymentStatusInDatabaseWithId(Repository.EmploymentStatus)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateInstitutionInDatabaseWithId(Repository.Institution)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateOrganizationInDatabaseWithId(Repository.Organization)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateOrganizationStructureInDatabaseWithId(Repository.OrganizationStructure)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreatePersonInDatabaseWithId(Repository.Person)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreatePostalAddressInDatabaseWithId(Repository.PostalAddress)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateProfessionInDatabaseWithId(Repository.Profession)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateSalaryAgreementInDatabaseWithId(Repository.SalaryAgreement)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateSalaryCodeGroupInDatabaseWithId(Repository.SalaryCodeGroup)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateSuccessfulRunInDatabaseWithId(Repository.SuccessfulRun)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.CreateWorkingTimeInDatabaseWithId(Repository.WorkingTime)">
            <returns>Result as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveContactInformation(Repository.ContactInformation)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartment(Repository.Department)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentLevelReference(Repository.DepartmentLevelReference)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentReference(Repository.DepartmentReference)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmployment(Repository.Employment)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentProfession(Repository.EmploymentProfession)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentStatus(Repository.EmploymentStatus)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveInstitution(Repository.Institution)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganization(Repository.Organization)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganizationStructure(Repository.OrganizationStructure)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrievePerson(Repository.Person)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrievePostalAddress(Repository.PostalAddress)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveProfession(Repository.Profession)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSalaryAgreement(Repository.SalaryAgreement)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSalaryCodeGroup(Repository.SalaryCodeGroup)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSuccessfulRun(Repository.SuccessfulRun)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveWorkingTime(Repository.WorkingTime)">
            <returns>Requested entity</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveContactInformationId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveContactInformationId(Repository.ContactInformation)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentId(Repository.Department)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentLevelReferenceId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentLevelReferenceId(Repository.DepartmentLevelReference)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentReferenceId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentReferenceId(Repository.DepartmentReference)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentId(Repository.Employment)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentProfessionId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentProfessionId(Repository.EmploymentProfession)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentStatusId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentStatusId(Repository.EmploymentStatus)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveInstitutionId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveInstitutionId(Repository.Institution)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganizationId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganizationId(Repository.Organization)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganizationStructureId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganizationStructureId(Repository.OrganizationStructure)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrievePersonId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrievePersonId(Repository.Person)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrievePostalAddressId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrievePostalAddressId(Repository.PostalAddress)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveProfessionId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveProfessionId(Repository.Profession)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSalaryAgreementId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSalaryAgreementId(Repository.SalaryAgreement)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSalaryCodeGroupId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSalaryCodeGroupId(Repository.SalaryCodeGroup)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSuccessfulRunId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSuccessfulRunId(Repository.SuccessfulRun)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveWorkingTimeId">
            <returns>Id of a recently created entity as int</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveWorkingTimeId(Repository.WorkingTime)">
            <returns>Id of <paramref name="entity"/> as int</returns><param name="entity" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveXmEmployments">
            <summary>Retrieves content of Config.List.XmEmployments list</summary>
        </member>
        <member name="M:LogicTier.Bizz.DeserializeXmlClone(System.String,System.String,System.String)">
            <summary>Deserializes <paramref name="xml"/></summary><param name="xml" /><param name="institutionId" /><param name="sdApi" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.DeserializeXmlUpdate(System.String,System.String,System.String)">
            <summary>Deserializes <paramref name="xml"/></summary><param name="xml" /><param name="institutionId" /><param name="sdApi" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetDepartmentClone(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetDepartmentXmlClone(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetDepartmentXmlUpdate(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetEmployment(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetEmploymentXml(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetEmploymentChanged(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetEmploymentChangedXml(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetEmploymentChangedAtDate(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetEmploymentChangedAtDateXml(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetInstitutionClone(System.String)">
            <returns>Result as bool</returns><param name="xml" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetInstitutionUpdate(System.String)">
            <returns>Result as bool</returns><param name="xml" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetInstitutionXmlClone(System.String)">
            <returns>Result as bool</returns><param name="xml" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetInstitutionXmlUpdate(System.String)">
            <returns>Result as bool</returns><param name="xml" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetOrganizationClone(System.String,System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><param name="sdApi" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetOrganizationUpdate(System.String,System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><param name="sdApi" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetOrganizationXmlClone(System.String,System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><param name="sdApi" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetOrganizationXmlUpdate(System.String,System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><param name="sdApi" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetPerson(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetPersonXml(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetPersonChangedAtDate(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetPersonChangedAtDateXml(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetProfessionClone(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeSerializeGetProfessionUpdate(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetProfessionXmlClone(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.DeserializeGetProfessionXmlUpdate(System.String,System.String)">
            <returns>Result as bool</returns><param name="xml" /><param name="institutionId" /><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="F:LogicTier.Bizz.config">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.#ctor">
            <remarks/>
        </member>
        <member name="P:LogicTier.Bizz.Config">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.InitiateAlertCheck">
            <summary>Search the database for expiring employments</summary>
        </member>
        <member name="M:LogicTier.Bizz.InitiateDatabaseOptimization">
            <summary>Optimizes data i Config.Database.ContactInformations</summary>
        </member>
        <member name="M:LogicTier.Bizz.InitiateDeserializeSoapClone(System.String,System.String,System.String)">
            <summary>Deserializes <paramref name="xml"/></summary><param name="xml" /><param name="institutionId" /><param name="sdApi" /><returns>result as bool</returns><exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.InitiateDeserializeSoapUpdate(System.String,System.String,System.String)">
            <summary>Deserializes <paramref name="xml"/></summary><param name="xml" /><param name="institutionId" /><param name="sdApi" /><returns>result as bool</returns>
            <exception cref="T:Repository.ArgumentEmptyException" /><exception cref="T:Repository.InvalidRefException" />
        </member>
        <member name="M:LogicTier.Bizz.InitiateRetrieveXml(System.String,System.String)">
            <summary>Retrieves xml from the Silkeborg Data Api</summary><param name="institutionId" /><param name="sdApi" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.InitiateUserEnrichment">
            <summary>Initiates the enrichment of SD database stub with data from Active Directory</summary>
        </member>
        <member name="M:LogicTier.Bizz.MailError">
            <summary>Sends an email with logfile to recipient</summary>
        </member>
        <member name="M:LogicTier.Bizz.MailError(System.String)">
            <summary>Sends an email with logfile to recipient</summary><param name="content" />
        </member>
        <member name="M:LogicTier.Bizz.MailXmList(System.String)">
            <summary>Displays field count in <see cref="T:System.Console"/></summary>
            <summary>Method,that sends an email with logfile to recipient</summary><param name="listPath">string</param>
        </member>
        <member name="M:LogicTier.Bizz.SendEmail(System.String,System.String,System.String,System.String,System.String)">
            <summary>Method, that creates a Mail Item</summary><param name="subject" /><param name="to" /><param name="body" /><param name="logFilePath" /><param name="listFilePath" />
        </member>
        <member name="M:LogicTier.Bizz.AcceptCallback(System.IAsyncResult)">
            <summary>Accept a CallBack on socket</summary><param name="ar" />
        </member>
        <member name="M:LogicTier.Bizz.DisplayHelp">
            <summary>Displays execution help</summary>
        </member>
        <member name="M:LogicTier.Bizz.HandleError(System.String[],System.String)">
            <summary>Displays or logs Config.xml error message</summary><param name="args" /><param name="exception" />
        </member>
        <member name="M:LogicTier.Bizz.ReadCallback(System.IAsyncResult)">
            <summary>Reads a CallBack from socket</summary><param name="ar" />
        </member>
        <member name="M:LogicTier.Bizz.SetCloneDepartmentsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetCloneInstitutionsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetCloneOrganizationsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetCloneProfessionsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetEmploymentsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetEmploymentsChangedParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetEmploymentsChangedAtDateParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetPersonsChangedAtDateParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetPersonsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetUpdateDepartmentsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetUpdateInstitutionsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetUpdateOrganizationsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.SetUpdateProfessionsParameters">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.StartListening">
            <summary>Listens for call on socket</summary>
        </member>
        <member name="M:LogicTier.Bizz.WriteStringLineToLogFile(System.String)">
            <returns>Result as bool</returns><param name="lineContent" />
        </member>
        <member name="M:LogicTier.Bizz.DisplayFieldCount">
            <summary>Displays field count in <see cref="T:System.Console"/></summary>
        </member>
        <member name="M:LogicTier.Bizz.OptimizeContactInformations">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.OptimizeEmploymentProfessions">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.ParseUserList(System.Collections.Generic.List{Repository.ADUser}@)">
            <summary>Checks the Config.UserList for dublettes and removes users without useful data</summary>
        </member>
        <member name="M:LogicTier.Bizz.SearchAllUsers">
            <summary>Searches for all users in AD</summary>
        </member>
        <member name="M:LogicTier.Bizz.TrimCioPhoneNumber(System.String)">
            <returns>Trimmed <paramref name="number"/> to 8-digit string</returns><param name="number" />
        </member>
        <member name="M:LogicTier.Bizz.CurrentLineNumber(System.Int32)">
            <returns>Current line number as int</returns><param name="lineNumber" />
        </member>
        <member name="M:LogicTier.Bizz.CurrentMethod(System.String)">
            <returns>Current method name as string</returns><param name="memberName" />
        </member>
        <member name="M:LogicTier.Bizz.Authentication">
            <summary>Checks, wether a user is part of of the SD security group</summary>
        </member>
        <member name="M:LogicTier.Bizz.InterpreteContent(System.String)">
            <summary>Interpretes content of request</summary><param name="content" /><exception cref="T:Repository.ArgumentInvalidException" /><exception cref="T:Repository.NullRefException" />
        </member>
        <member name="M:LogicTier.Bizz.ProcessContent">
            <summary>Processes content of request</summary>
        </member>
        <member name="M:LogicTier.Bizz.ProcessEntityList``1">
            <summary>Proces result from Api</summary><typeparam name="T" />
        </member>
        <member name="M:LogicTier.Bizz.ProcessResponce(System.String)">
            <summary>Processes the responce to request</summary><param name="content" /><exception cref="T:Repository.ArgumentInvalidException" /><exception cref="T:Repository.NullRefException" />
        </member>
        <member name="M:LogicTier.Bizz.SaveCsvList">
            <summary>Saves sorted XmEmployments</summary>
        </member>
        <member name="M:LogicTier.Bizz.SaveUserList(System.Collections.Generic.List{Repository.ADUser})">
            <summary>Saves sorted XmEmployments</summary>
        </member>
        <member name="M:LogicTier.Bizz.Send(System.Net.Sockets.Socket,System.String)">
            <summary>Sends <paramref name="data"/></summary><param name="handler" /><param name="data" />
        </member>
        <member name="M:LogicTier.Bizz.SendCallback(System.IAsyncResult)">
            <summary>Sends a CallBack to socket</summary><param name="ar" />
        </member>
        <member name="M:LogicTier.Bizz.SetConfigParams">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.SetToDate">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoublets">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromContactInformationList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromDepartmentList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromDepartmentLevelReferenceListList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromDepartmentReferenceList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromEmploymentList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromEmploymentProfessionList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromEmploymentStatusList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromInstitutionList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromOrganizationList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromOrganizationStructureList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromPersonList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromPostalAddressList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromProfessionList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromSalaryAgreementList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromSalaryCodeGroupList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RemoveDoubletsFromWorkingTimeList">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveData(System.String)">
            <summary>Retrieve data from Silkeborg Data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.Retrieve3in1Organizations(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.View3in1Organization})">
            <returns>View3in1Organizations as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.Retrieve3in1OrganizationStructures(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.View3in1OrganizationStructure})">
            <returns>View3in1OrganizationStructures as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.Retrieve3in1Persons(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.View3in1Person})">
            <returns>View3in1Persons as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveContactInformationList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewContactInformation})">
            <returns>ViewContactInformationList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentLevelReferenceList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewDepartmentLevelReference})">
            <returns>ViewDepartmentLevelReferenceList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewDepartment})">
            <returns>ViewDepartmentList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentReferenceList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewDepartmentReference})">
            <returns>ViewDepartmentReferenceList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewEmployment})">
            <returns>ViewEmploymentList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentProfessionList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewEmploymentProfession})">
            <returns>ViewEmploymentProfessionList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentStatusList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewEmploymentStatus})">
            <returns>ViewEmploymentStatusList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveInstitutionList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewInstitution})">
            <returns>ViewInstitutionList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveKantineList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewKantine})">
            <returns>ViewKantineList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveMochs(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewMoch})">
            <returns>ViewMochs as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganizationList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewOrganization})">
            <returns>ViewOrganizationList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganizationStructureList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewOrganizationStructure})">
            <returns>ViewOrganizationStructureList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrievePersonList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewPerson})">
            <returns>ViewPersonList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrievePostalAddressList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewPostalAddress})">
            <returns>ViewPostalAddressList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveProfessionList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewProfession})">
            <returns>ViewProfessionList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSalaryAgreementList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewSalaryAgreement})">
            <returns>ViewSalaryAgreementList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSalaryCodeGroupList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewSalaryCodeGroup})">
            <returns>View3in1ContactInformationList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveWorkingTimeList(Microsoft.EntityFrameworkCore.DbSet{ApiRepository.ViewWorkingTime})">
            <returns>ViewWorkingTimeList as csv string</returns><param name="view" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveApiFromSD(System.String)">
            <summary>Retrieves,cleans and updates daily changes of Person and Employment data from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveApiFromSdDataClone(System.String)">
            <remarks /><param name="institutionId" /><exception cref="T:Repository.ArgumentInvalidException" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveApiFromSdDataUpdate(System.String)">
            <remarks /><param name="institutionId" /><exception cref="T:Repository.ArgumentInvalidException" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveApiFromSdDepData(System.String)">
            <remarks /><param name="institutionId" /><exception cref="T:Repository.ArgumentInvalidException" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveCurrentDomainPath">
            <summary>Retrieves the current domain path</summary><returns>Result as string</returns>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveElementNameFromxml(System.String)">
            <returns>Element Name from <paramref name="xml"/> as string</returns><param name="xml" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldest``1(``0,``0)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveFromDate(System.String,System.String)">
            <summary>Sets Fromdate for RunMode</summary><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveDepartmentFromSD(System.String)">
            <summary>Retrieves,cleans and update data from GetDepartment API for <paramref name="institutionId"/> from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentFromSD(System.String)">
            <summary>Retrieves,cleans and update data from GetDepartment API for <paramref name="institutionId"/> from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentChangedFromSD(System.String)">
            <summary>Retrieves,cleans and update data from GetEmploymentChanged API for <paramref name="institutionId"/> from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveEmploymentChangedAtDateFromSD(System.String)">
            <summary>Retrieves,cleans and update data from GetEmploymentChangedAtDate API for <paramref name="institutionId"/> from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveInstitutionFromSD">
            <summary>Retrieves,cleans and update data from GetInstitution API at SD-data</summary>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOrganizationFromSD(System.String)">
            <summary>Retrieves,cleans and update data from GetOrganization API for <paramref name="institutionId"/> from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrievePersonFromSD(System.String)">
            <summary>Retrieves,cleans and update data from GetPerson API for <paramref name="institutionId"/> from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrievePersonChangedAtDateFromSD(System.String)">
            <summary>Retrieves,cleans and update data from GetPersonChangedAtDate API for <paramref name="institutionId"/> from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveProfessionFromSD(System.String)">
            <summary>Retrieves,cleans and update data from GetProfession API for <paramref name="institutionId"/> from SD-data</summary><param name="institutionId" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveInstitutionIdentifier(Repository.ADUser)">
            <remarks /><param name="user" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveNodeCountFromxml(System.String,System.String)">
            <returns>Node count from an <paramref name="xml"/> as string</returns><param name="sdApi" /><param name="xml" /><exception cref="T:Repository.ArgumentInvalidException" />
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestContactInformation(Repository.ContactInformation,Repository.ContactInformation)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestDepartment(Repository.Department,Repository.Department)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestDepartmentLevelReference(Repository.DepartmentLevelReference,Repository.DepartmentLevelReference)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestDepartmentReference(Repository.DepartmentReference,Repository.DepartmentReference)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestEmployment(Repository.Employment,Repository.Employment)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestEmploymentProfession(Repository.EmploymentProfession,Repository.EmploymentProfession)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestEmploymentStatus(Repository.EmploymentStatus,Repository.EmploymentStatus)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestInstitution(Repository.Institution,Repository.Institution)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestOrganization(Repository.Organization,Repository.Organization)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestOrganizationStructure(Repository.OrganizationStructure,Repository.OrganizationStructure)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestPerson(Repository.Person,Repository.Person)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestPostalAddress(Repository.PostalAddress,Repository.PostalAddress)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestProfession(Repository.Profession,Repository.Profession)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestSalaryAgreement(Repository.SalaryAgreement,Repository.SalaryAgreement)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestSalaryCodeGroup(Repository.SalaryCodeGroup,Repository.SalaryCodeGroup)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveOldestWorkingTime(Repository.WorkingTime,Repository.WorkingTime)">
            <remarks/>
        </member>
        <member name="M:LogicTier.Bizz.RetrieveSdApiFromxml(System.String)">
            <returns>SdApi from <paramref name="xml"/> as string</returns><param name="xml" />
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentChangedDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentChangedDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentChangedDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentChangedAtDateDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentChangedAtDateDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentChangedAtDateDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateInstitutionData">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdatePersonChangedAtDateDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdatePersonChangedAtDateDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdatePersonChangedAtDateDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateProfessionDataHB">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateProfessionDataHI">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateProfessionDataHW">
            <remarks />
        </member>
        <member name="M:LogicTier.Bizz.UpdateData(System.String,System.String,System.String)">
            <summary>Cleans data - and updates database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.UpdateInstitutionData(System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.UpdatePersonData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.UpdateProfessionData(System.String,System.String,System.String)">
            <summary>Updates <paramref name="xml"/> data into database</summary><param name="xml" /><param name="institutionId" /><param name="sdApi" />
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartments(WsRepository.GetDepartment20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentsChanged(WsRepository.GetEmploymentChanged20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentsChangedAtDate(WsRepository.GetEmploymentChangedAtDate20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateInstitutions(WsRepository.GetInstitution20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdatePersonsChangedAtDate(WsRepository.GetPersonChangedAtDate20111201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateProfessions(WsRepository.GetProfession20080201)">
            <summary>Updates entities in <paramref name="entity"/> into database</summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateContactInformation(Repository.ContactInformation@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateContactInformation(Repository.ContactInformation@,Repository.ContactInformation@,System.String,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateContactInformationNoCheck(Repository.ContactInformation@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartment(Repository.Department@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartment(Repository.Department@,Repository.Department@,System.String,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="institutionId" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentNoCheck(Repository.Department@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentLevelReference(Repository.DepartmentLevelReference@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentLevelReference(Repository.DepartmentLevelReference@,Repository.DepartmentLevelReference@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentLevelReferenceNoCheck(Repository.DepartmentLevelReference@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentReference(Repository.DepartmentReference@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentReference(Repository.DepartmentReference@,Repository.DepartmentReference@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateDepartmentReferenceNoCheck(Repository.DepartmentReference@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmployment(Repository.Employment@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmployment(Repository.Employment@,Repository.Employment@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentNoCheck(Repository.Employment@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentProfession(Repository.EmploymentProfession@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentProfession(Repository.EmploymentProfession@,Repository.EmploymentProfession@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentProfessionNoCheck(Repository.EmploymentProfession@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentStatus(Repository.EmploymentStatus@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentStatus(Repository.EmploymentStatus@,Repository.EmploymentStatus@,System.String,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateEmploymentStatusNoCheck(Repository.EmploymentStatus@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateInstitution(Repository.Institution@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateInstitution(Repository.Institution@,Repository.Institution@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateInstitutionNoCheck(Repository.Institution@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganization(Repository.Organization@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganization(Repository.Organization@,Repository.Organization@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganization(WsRepository.WsOrganization,System.String)">
            <summary>Updates Organization and DepartmentReferences</summary><param name="entity" /><param name="institutionId" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationNoCheck(Repository.Organization@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationStructure(Repository.OrganizationStructure@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="institutionId" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationStructure(Repository.OrganizationStructure@,Repository.OrganizationStructure@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationStructure(WsRepository.WsOrganizationStructure,System.String)">
            <summary>Updates Organization and DepartmentReferences</summary><param name="entity" /><param name="institutionId" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateOrganizationStructureNoCheck(Repository.OrganizationStructure@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdatePerson(Repository.Person@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdatePerson(Repository.Person@,Repository.Person@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdatePersonNoCheck(Repository.Person@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdatePostalAddress(Repository.PostalAddress@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdatePostalAddress(Repository.PostalAddress@,Repository.PostalAddress@,System.String,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdatePostalAddressNoCheck(Repository.PostalAddress@,System.String)">
            <summary>Updates content of <paramref name="entity"/> in database</summary><param name="entity" /><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateProfession(Repository.Profession@,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateProfession(Repository.Profession@,Repository.Profession@,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateProfessionNoCheck(Repository.Profession@)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateSalaryAgreement(Repository.SalaryAgreement@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateSalaryAgreement(Repository.SalaryAgreement@,Repository.SalaryAgreement@,System.String,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateSalaryAgreementNoCheck(Repository.SalaryAgreement@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity"/><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateSalaryCodeGroup(Repository.SalaryCodeGroup@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateSalaryCodeGroup(Repository.SalaryCodeGroup@,Repository.SalaryCodeGroup@,System.String,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="parent" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateSalaryCodeGroupNoCheck(Repository.SalaryCodeGroup@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="parent" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateWorkingTime(Repository.WorkingTime@,System.String,System.Boolean)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="employment" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateWorkingTime(Repository.WorkingTime@,Repository.WorkingTime@,System.String,System.Boolean)">
            <summary>Updates <paramref name="oldEntity"/> with data from <paramref name="newEntity"/></summary><param name="oldEntity" /><param name="newEntity" /><param name="employment" /><param name="updateInDatabase" /><returns>Result as bool</returns>
        </member>
        <member name="M:LogicTier.Bizz.UpdateWorkingTimeNoCheck(Repository.WorkingTime@,System.String)">
            <summary>Updates <paramref name="entity"/></summary><param name="entity" /><param name="employment" /><returns>Result as bool</returns>
        </member>
        <member name="T:LogicTier.ExtensionMethods">
            <remarks />
        </member>
        <member name="M:LogicTier.ExtensionMethods.IsNullOrWhiteSpace(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicTier.ExtensionMethods.RetrievePropertyValue(System.DirectoryServices.SearchResult,System.String)">
            <returns>Property value as string</returns><param name="sr">SearchResult</param><param name="propertyName">string</param>
        </member>
        <member name="T:LogicTier.Garbage">
            <remarks />
        </member>
        <member name="M:LogicTier.Garbage.Collect">
            <remarks />
        </member>
        <member name="T:LogicTier.IMapFrom`1">
            <remarks/>
        </member>
        <member name="M:LogicTier.IMapFrom`1.Mapping(AutoMapper.Profile)">
            <remarks/>
        </member>
        <member name="T:LogicTier.IMap`1">
            <remarks/>
        </member>
        <member name="M:LogicTier.IMap`1.Mapping(AutoMapper.Profile)">
            <remarks/>
        </member>
        <member name="T:LogicTier.MappingProfile">
            <remarks/>
        </member>
        <member name="M:LogicTier.MappingProfile.#ctor">
            <remarks/>
        </member>
        <member name="T:LogicTier.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.ConnectionString">
            <summary>
              Looks up a localized string similar to Data Source=udcsql2012;Initial Catalog=SD;User ID=sd;Password=kfe73fmf3F9f21dC;Connect Timeout=60;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False;MultipleActiveResultSets=True;ConnectRetryCount=255.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.CsvPath">
            <summary>
              Looks up a localized string similar to C:\CSV\.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.DataSetsPath">
            <summary>
              Looks up a localized string similar to C:\Datasets\.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.ErrorPath">
            <summary>
              Looks up a localized string similar to C:\Errors\.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.FutureDate">
            <summary>
              Looks up a localized string similar to 9999-12-31.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetDepartmentAction">
            <summary>
              Looks up a localized string similar to GetDepartment20111201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetEmploymentAction">
            <summary>
              Looks up a localized string similar to GetEmployment20111201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetEmploymentChangedAction">
            <summary>
              Looks up a localized string similar to GetEmploymentChanged20111201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetEmploymentChangedAtDateAction">
            <summary>
              Looks up a localized string similar to GetEmploymentChangedAtDate20111201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetInstitutionAction">
            <summary>
              Looks up a localized string similar to GetInstitution20111201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetOrganizationAction">
            <summary>
              Looks up a localized string similar to GetOrganization20111201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetPersonAction">
            <summary>
              Looks up a localized string similar to GetPerson20111201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetPersonChangedAtDateAction">
            <summary>
              Looks up a localized string similar to GetPersonChangedAtDate20111201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.GetProfessionAction">
            <summary>
              Looks up a localized string similar to GetProfession20080201.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.LogsPath">
            <summary>
              Looks up a localized string similar to C:\Logs\.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.OldDate">
            <summary>
              Looks up a localized string similar to 2010-01-01.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.ResourcesPath">
            <summary>
              Looks up a localized string similar to C:\Resources\.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.SDWSPassword">
            <summary>
              Looks up a localized string similar to up4ne43u.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.SDWSUsername">
            <summary>
              Looks up a localized string similar to sysyshb01.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.UDCSDPassword">
            <summary>
              Looks up a localized string similar to dlfn37f433#F3f3d3cdevvw2d.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.UDCSDUserame">
            <summary>
              Looks up a localized string similar to service_udcsd.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.WebServiceCachePath">
            <summary>
              Looks up a localized string similar to WSCache.
            </summary>
        </member>
        <member name="P:LogicTier.Resources.WebServiceUri">
            <summary>
              Looks up a localized string similar to https://service.sd.dk/sdws/.
            </summary>
        </member>
        <member name="T:LogicTier.StateObject">
            <remarks />
        </member>
        <member name="P:LogicTier.StateObject.BufferSize">
            <remarks />
        </member>
        <member name="P:LogicTier.StateObject.Buffer">
            <remarks />
        </member>
        <member name="P:LogicTier.StateObject.Sb">
            <remarks />
        </member>
        <member name="P:LogicTier.StateObject.WorkSocket">
            <remarks />
        </member>
        <member name="T:LogicTier.ValidationBehaviour`2">
            <remarks/>
        </member>
        <member name="M:LogicTier.ValidationBehaviour`2.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.IValidator{`0}})">
            <remarks/>
        </member>
        <member name="M:LogicTier.ValidationBehaviour`2.Handle(`0,System.Threading.CancellationToken,MediatR.RequestHandlerDelegate{`1})">
            <remarks/>
        </member>
        <member name="T:LogicTier.ValidationException">
            <remarks/>
        </member>
        <member name="P:LogicTier.ValidationException.Errors">
            <remarks/>
        </member>
        <member name="M:LogicTier.ValidationException.#ctor">
            <remarks/>
        </member>
        <member name="M:LogicTier.ValidationException.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.Results.ValidationFailure})">
            <remarks/>
        </member>
    </members>
</doc>
